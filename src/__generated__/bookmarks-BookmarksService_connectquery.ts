// @generated by protoc-gen-connect-query v0.6.0 with parameter "target=ts,import_extension=.ts"
// @generated from file bookmarks.proto (package bookmarks, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateBookmarkRequest, CreateBookmarkResponse, DeleteBookmarkRequest, DeleteBookmarkResponse, GetAffectedBookmarksRequest, GetAffectedBookmarksResponse, GetBookmarkRequest, GetBookmarkResponse, ListBookmarkResponse, ListBookmarksRequest, UpdateBookmarkRequest, UpdateBookmarkResponse } from "./bookmarks_pb.ts";
import { MethodKind } from "@bufbuild/protobuf";
import { createQueryService, createUnaryHooks, UnaryFunctionsWithHooks } from "@connectrpc/connect-query";

export const typeName = "bookmarks.BookmarksService";

/**
 * @generated from service bookmarks.BookmarksService
 */
export const BookmarksService = {
  typeName: "bookmarks.BookmarksService",
  methods: {
    /**
     * returns all bookmarks of the current user. note that this does not include the actual bookmark data, use GetBookmark for that
     *
     * @generated from rpc bookmarks.BookmarksService.ListBookmarks
     */
    listBookmarks: {
      name: "ListBookmarks",
      I: ListBookmarksRequest,
      O: ListBookmarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc bookmarks.BookmarksService.CreateBookmark
     */
    createBookmark: {
      name: "CreateBookmark",
      I: CreateBookmarkRequest,
      O: CreateBookmarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc bookmarks.BookmarksService.GetBookmark
     */
    getBookmark: {
      name: "GetBookmark",
      I: GetBookmarkRequest,
      O: GetBookmarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc bookmarks.BookmarksService.UpdateBookmark
     */
    updateBookmark: {
      name: "UpdateBookmark",
      I: UpdateBookmarkRequest,
      O: UpdateBookmarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc bookmarks.BookmarksService.DeleteBookmark
     */
    deleteBookmark: {
      name: "DeleteBookmark",
      I: DeleteBookmarkRequest,
      O: DeleteBookmarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * a helper method to find all affected apps for a given blast radius snapshot
     *
     * @generated from rpc bookmarks.BookmarksService.GetAffectedBookmarks
     */
    getAffectedBookmarks: {
      name: "GetAffectedBookmarks",
      I: GetAffectedBookmarksRequest,
      O: GetAffectedBookmarksResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

const $queryService = createQueryService({  service: BookmarksService,});

/**
 * returns all bookmarks of the current user. note that this does not include the actual bookmark data, use GetBookmark for that
 *
 * @generated from rpc bookmarks.BookmarksService.ListBookmarks
 */
export const listBookmarks: UnaryFunctionsWithHooks<ListBookmarksRequest, ListBookmarkResponse> = {   ...$queryService.listBookmarks,  ...createUnaryHooks($queryService.listBookmarks)};

/**
 * @generated from rpc bookmarks.BookmarksService.CreateBookmark
 */
export const createBookmark: UnaryFunctionsWithHooks<CreateBookmarkRequest, CreateBookmarkResponse> = {   ...$queryService.createBookmark,  ...createUnaryHooks($queryService.createBookmark)};

/**
 * @generated from rpc bookmarks.BookmarksService.GetBookmark
 */
export const getBookmark: UnaryFunctionsWithHooks<GetBookmarkRequest, GetBookmarkResponse> = {   ...$queryService.getBookmark,  ...createUnaryHooks($queryService.getBookmark)};

/**
 * @generated from rpc bookmarks.BookmarksService.UpdateBookmark
 */
export const updateBookmark: UnaryFunctionsWithHooks<UpdateBookmarkRequest, UpdateBookmarkResponse> = {   ...$queryService.updateBookmark,  ...createUnaryHooks($queryService.updateBookmark)};

/**
 * @generated from rpc bookmarks.BookmarksService.DeleteBookmark
 */
export const deleteBookmark: UnaryFunctionsWithHooks<DeleteBookmarkRequest, DeleteBookmarkResponse> = {   ...$queryService.deleteBookmark,  ...createUnaryHooks($queryService.deleteBookmark)};

/**
 * a helper method to find all affected apps for a given blast radius snapshot
 *
 * @generated from rpc bookmarks.BookmarksService.GetAffectedBookmarks
 */
export const getAffectedBookmarks: UnaryFunctionsWithHooks<GetAffectedBookmarksRequest, GetAffectedBookmarksResponse> = {   ...$queryService.getAffectedBookmarks,  ...createUnaryHooks($queryService.getAffectedBookmarks)};
