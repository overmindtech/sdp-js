// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file bookmarks.proto (package bookmarks, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Query, Reference } from "./items_pb";
import { file_items } from "./items_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file bookmarks.proto.
 */
export const file_bookmarks: GenFile = /*@__PURE__*/
  fileDesc("Cg9ib29rbWFya3MucHJvdG8SCWJvb2ttYXJrcyJsCghCb29rbWFyaxItCghtZXRhZGF0YRgBIAEoCzIbLmJvb2ttYXJrcy5Cb29rbWFya01ldGFkYXRhEjEKCnByb3BlcnRpZXMYAiABKAsyHS5ib29rbWFya3MuQm9va21hcmtQcm9wZXJ0aWVzIoUBChJCb29rbWFya1Byb3BlcnRpZXMSDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIXCgdxdWVyaWVzGAMgAygLMgYuUXVlcnkSIQoNZXhjbHVkZWRJdGVtcxgEIAMoCzIKLlJlZmVyZW5jZRIQCghpc1N5c3RlbRgFIAEoCCJNChBCb29rbWFya01ldGFkYXRhEgwKBFVVSUQYASABKAwSKwoHY3JlYXRlZBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiFgoUTGlzdEJvb2ttYXJrc1JlcXVlc3QiPgoUTGlzdEJvb2ttYXJrUmVzcG9uc2USJgoJYm9va21hcmtzGAMgAygLMhMuYm9va21hcmtzLkJvb2ttYXJrIkoKFUNyZWF0ZUJvb2ttYXJrUmVxdWVzdBIxCgpwcm9wZXJ0aWVzGAEgASgLMh0uYm9va21hcmtzLkJvb2ttYXJrUHJvcGVydGllcyI/ChZDcmVhdGVCb29rbWFya1Jlc3BvbnNlEiUKCGJvb2ttYXJrGAEgASgLMhMuYm9va21hcmtzLkJvb2ttYXJrIiIKEkdldEJvb2ttYXJrUmVxdWVzdBIMCgRVVUlEGAEgASgMIjwKE0dldEJvb2ttYXJrUmVzcG9uc2USJQoIYm9va21hcmsYASABKAsyEy5ib29rbWFya3MuQm9va21hcmsiWAoVVXBkYXRlQm9va21hcmtSZXF1ZXN0EgwKBFVVSUQYASABKAwSMQoKcHJvcGVydGllcxgCIAEoCzIdLmJvb2ttYXJrcy5Cb29rbWFya1Byb3BlcnRpZXMiPwoWVXBkYXRlQm9va21hcmtSZXNwb25zZRIlCghib29rbWFyaxgDIAEoCzITLmJvb2ttYXJrcy5Cb29rbWFyayIlChVEZWxldGVCb29rbWFya1JlcXVlc3QSDAoEVVVJRBgBIAEoDCIYChZEZWxldGVCb29rbWFya1Jlc3BvbnNlIkoKG0dldEFmZmVjdGVkQm9va21hcmtzUmVxdWVzdBIUCgxzbmFwc2hvdFVVSUQYASABKAwSFQoNYm9va21hcmtVVUlEcxgCIAMoDCI1ChxHZXRBZmZlY3RlZEJvb2ttYXJrc1Jlc3BvbnNlEhUKDWJvb2ttYXJrVVVJRHMYASADKAwyoQQKEEJvb2ttYXJrc1NlcnZpY2USUQoNTGlzdEJvb2ttYXJrcxIfLmJvb2ttYXJrcy5MaXN0Qm9va21hcmtzUmVxdWVzdBofLmJvb2ttYXJrcy5MaXN0Qm9va21hcmtSZXNwb25zZRJVCg5DcmVhdGVCb29rbWFyaxIgLmJvb2ttYXJrcy5DcmVhdGVCb29rbWFya1JlcXVlc3QaIS5ib29rbWFya3MuQ3JlYXRlQm9va21hcmtSZXNwb25zZRJMCgtHZXRCb29rbWFyaxIdLmJvb2ttYXJrcy5HZXRCb29rbWFya1JlcXVlc3QaHi5ib29rbWFya3MuR2V0Qm9va21hcmtSZXNwb25zZRJVCg5VcGRhdGVCb29rbWFyaxIgLmJvb2ttYXJrcy5VcGRhdGVCb29rbWFya1JlcXVlc3QaIS5ib29rbWFya3MuVXBkYXRlQm9va21hcmtSZXNwb25zZRJVCg5EZWxldGVCb29rbWFyaxIgLmJvb2ttYXJrcy5EZWxldGVCb29rbWFya1JlcXVlc3QaIS5ib29rbWFya3MuRGVsZXRlQm9va21hcmtSZXNwb25zZRJnChRHZXRBZmZlY3RlZEJvb2ttYXJrcxImLmJvb2ttYXJrcy5HZXRBZmZlY3RlZEJvb2ttYXJrc1JlcXVlc3QaJy5ib29rbWFya3MuR2V0QWZmZWN0ZWRCb29rbWFya3NSZXNwb25zZUIkWiJnaXRodWIuY29tL292ZXJtaW5kdGVjaC9zZHAtZ287c2RwYgZwcm90bzM", [file_google_protobuf_timestamp, file_items]);

/**
 * a complete Bookmark with user-supplied and machine-supplied values
 *
 * @generated from message bookmarks.Bookmark
 */
export type Bookmark = Message<"bookmarks.Bookmark"> & {
  /**
   * @generated from field: bookmarks.BookmarkMetadata metadata = 1;
   */
  metadata?: BookmarkMetadata;

  /**
   * @generated from field: bookmarks.BookmarkProperties properties = 2;
   */
  properties?: BookmarkProperties;
};

/**
 * Describes the message bookmarks.Bookmark.
 * Use `create(BookmarkSchema)` to create a new message.
 */
export const BookmarkSchema: GenMessage<Bookmark> = /*@__PURE__*/
  messageDesc(file_bookmarks, 0);

/**
 * The user-editable parts of a Bookmark
 *
 * @generated from message bookmarks.BookmarkProperties
 */
export type BookmarkProperties = Message<"bookmarks.BookmarkProperties"> & {
  /**
   * user supplied name of this bookmark
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * user supplied description of this bookmark
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * queries that make up the bookmark
   *
   * @generated from field: repeated Query queries = 3;
   */
  queries: Query[];

  /**
   * Items that should be excluded from the bookmark's results
   *
   * @generated from field: repeated Reference excludedItems = 4;
   */
  excludedItems: Reference[];

  /**
   * Whether this bookmark is a system bookmark. System bookmarks are hidden
   * from list results and can therefore only be accessed by their UUID.
   * Bookmarks created by users are not system bookmarks.
   *
   * @generated from field: bool isSystem = 5;
   */
  isSystem: boolean;
};

/**
 * Describes the message bookmarks.BookmarkProperties.
 * Use `create(BookmarkPropertiesSchema)` to create a new message.
 */
export const BookmarkPropertiesSchema: GenMessage<BookmarkProperties> = /*@__PURE__*/
  messageDesc(file_bookmarks, 1);

/**
 * Descriptor for a bookmark
 *
 * @generated from message bookmarks.BookmarkMetadata
 */
export type BookmarkMetadata = Message<"bookmarks.BookmarkMetadata"> & {
  /**
   * unique id to identify this bookmark
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * timestamp when this bookmark was created
   *
   * @generated from field: google.protobuf.Timestamp created = 2;
   */
  created?: Timestamp;
};

/**
 * Describes the message bookmarks.BookmarkMetadata.
 * Use `create(BookmarkMetadataSchema)` to create a new message.
 */
export const BookmarkMetadataSchema: GenMessage<BookmarkMetadata> = /*@__PURE__*/
  messageDesc(file_bookmarks, 2);

/**
 * list all bookmarks
 *
 * TODO: pagination
 *
 * @generated from message bookmarks.ListBookmarksRequest
 */
export type ListBookmarksRequest = Message<"bookmarks.ListBookmarksRequest"> & {
};

/**
 * Describes the message bookmarks.ListBookmarksRequest.
 * Use `create(ListBookmarksRequestSchema)` to create a new message.
 */
export const ListBookmarksRequestSchema: GenMessage<ListBookmarksRequest> = /*@__PURE__*/
  messageDesc(file_bookmarks, 3);

/**
 * @generated from message bookmarks.ListBookmarkResponse
 */
export type ListBookmarkResponse = Message<"bookmarks.ListBookmarkResponse"> & {
  /**
   * @generated from field: repeated bookmarks.Bookmark bookmarks = 3;
   */
  bookmarks: Bookmark[];
};

/**
 * Describes the message bookmarks.ListBookmarkResponse.
 * Use `create(ListBookmarkResponseSchema)` to create a new message.
 */
export const ListBookmarkResponseSchema: GenMessage<ListBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_bookmarks, 4);

/**
 * creates a new bookmark
 *
 * @generated from message bookmarks.CreateBookmarkRequest
 */
export type CreateBookmarkRequest = Message<"bookmarks.CreateBookmarkRequest"> & {
  /**
   * @generated from field: bookmarks.BookmarkProperties properties = 1;
   */
  properties?: BookmarkProperties;
};

/**
 * Describes the message bookmarks.CreateBookmarkRequest.
 * Use `create(CreateBookmarkRequestSchema)` to create a new message.
 */
export const CreateBookmarkRequestSchema: GenMessage<CreateBookmarkRequest> = /*@__PURE__*/
  messageDesc(file_bookmarks, 5);

/**
 * @generated from message bookmarks.CreateBookmarkResponse
 */
export type CreateBookmarkResponse = Message<"bookmarks.CreateBookmarkResponse"> & {
  /**
   * @generated from field: bookmarks.Bookmark bookmark = 1;
   */
  bookmark?: Bookmark;
};

/**
 * Describes the message bookmarks.CreateBookmarkResponse.
 * Use `create(CreateBookmarkResponseSchema)` to create a new message.
 */
export const CreateBookmarkResponseSchema: GenMessage<CreateBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_bookmarks, 6);

/**
 * gets a specific bookmark
 *
 * @generated from message bookmarks.GetBookmarkRequest
 */
export type GetBookmarkRequest = Message<"bookmarks.GetBookmarkRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message bookmarks.GetBookmarkRequest.
 * Use `create(GetBookmarkRequestSchema)` to create a new message.
 */
export const GetBookmarkRequestSchema: GenMessage<GetBookmarkRequest> = /*@__PURE__*/
  messageDesc(file_bookmarks, 7);

/**
 * @generated from message bookmarks.GetBookmarkResponse
 */
export type GetBookmarkResponse = Message<"bookmarks.GetBookmarkResponse"> & {
  /**
   * @generated from field: bookmarks.Bookmark bookmark = 1;
   */
  bookmark?: Bookmark;
};

/**
 * Describes the message bookmarks.GetBookmarkResponse.
 * Use `create(GetBookmarkResponseSchema)` to create a new message.
 */
export const GetBookmarkResponseSchema: GenMessage<GetBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_bookmarks, 8);

/**
 * updates an existing bookmark
 *
 * @generated from message bookmarks.UpdateBookmarkRequest
 */
export type UpdateBookmarkRequest = Message<"bookmarks.UpdateBookmarkRequest"> & {
  /**
   * unique id to identify this bookmark
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * new attributes for this bookmark
   *
   * @generated from field: bookmarks.BookmarkProperties properties = 2;
   */
  properties?: BookmarkProperties;
};

/**
 * Describes the message bookmarks.UpdateBookmarkRequest.
 * Use `create(UpdateBookmarkRequestSchema)` to create a new message.
 */
export const UpdateBookmarkRequestSchema: GenMessage<UpdateBookmarkRequest> = /*@__PURE__*/
  messageDesc(file_bookmarks, 9);

/**
 * @generated from message bookmarks.UpdateBookmarkResponse
 */
export type UpdateBookmarkResponse = Message<"bookmarks.UpdateBookmarkResponse"> & {
  /**
   * @generated from field: bookmarks.Bookmark bookmark = 3;
   */
  bookmark?: Bookmark;
};

/**
 * Describes the message bookmarks.UpdateBookmarkResponse.
 * Use `create(UpdateBookmarkResponseSchema)` to create a new message.
 */
export const UpdateBookmarkResponseSchema: GenMessage<UpdateBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_bookmarks, 10);

/**
 * Delete the bookmark with the specified ID.
 *
 * @generated from message bookmarks.DeleteBookmarkRequest
 */
export type DeleteBookmarkRequest = Message<"bookmarks.DeleteBookmarkRequest"> & {
  /**
   * unique id of the bookmark to delete
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message bookmarks.DeleteBookmarkRequest.
 * Use `create(DeleteBookmarkRequestSchema)` to create a new message.
 */
export const DeleteBookmarkRequestSchema: GenMessage<DeleteBookmarkRequest> = /*@__PURE__*/
  messageDesc(file_bookmarks, 11);

/**
 * @generated from message bookmarks.DeleteBookmarkResponse
 */
export type DeleteBookmarkResponse = Message<"bookmarks.DeleteBookmarkResponse"> & {
};

/**
 * Describes the message bookmarks.DeleteBookmarkResponse.
 * Use `create(DeleteBookmarkResponseSchema)` to create a new message.
 */
export const DeleteBookmarkResponseSchema: GenMessage<DeleteBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_bookmarks, 12);

/**
 * @generated from message bookmarks.GetAffectedBookmarksRequest
 */
export type GetAffectedBookmarksRequest = Message<"bookmarks.GetAffectedBookmarksRequest"> & {
  /**
   * the snapshot to consider
   *
   * @generated from field: bytes snapshotUUID = 1;
   */
  snapshotUUID: Uint8Array;

  /**
   * the bookmarks to filter
   *
   * @generated from field: repeated bytes bookmarkUUIDs = 2;
   */
  bookmarkUUIDs: Uint8Array[];
};

/**
 * Describes the message bookmarks.GetAffectedBookmarksRequest.
 * Use `create(GetAffectedBookmarksRequestSchema)` to create a new message.
 */
export const GetAffectedBookmarksRequestSchema: GenMessage<GetAffectedBookmarksRequest> = /*@__PURE__*/
  messageDesc(file_bookmarks, 13);

/**
 * @generated from message bookmarks.GetAffectedBookmarksResponse
 */
export type GetAffectedBookmarksResponse = Message<"bookmarks.GetAffectedBookmarksResponse"> & {
  /**
   * the bookmarks that intersected with the snapshot
   *
   * @generated from field: repeated bytes bookmarkUUIDs = 1;
   */
  bookmarkUUIDs: Uint8Array[];
};

/**
 * Describes the message bookmarks.GetAffectedBookmarksResponse.
 * Use `create(GetAffectedBookmarksResponseSchema)` to create a new message.
 */
export const GetAffectedBookmarksResponseSchema: GenMessage<GetAffectedBookmarksResponse> = /*@__PURE__*/
  messageDesc(file_bookmarks, 14);

/**
 * @generated from service bookmarks.BookmarksService
 */
export const BookmarksService: GenService<{
  /**
   * ListBookmarks returns all bookmarks of the current user. note that this does not include the actual bookmark data, use GetBookmark for that
   *
   * @generated from rpc bookmarks.BookmarksService.ListBookmarks
   */
  listBookmarks: {
    methodKind: "unary";
    input: typeof ListBookmarksRequestSchema;
    output: typeof ListBookmarkResponseSchema;
  },
  /**
   * CreateBookmark creates a new bookmark
   *
   * @generated from rpc bookmarks.BookmarksService.CreateBookmark
   */
  createBookmark: {
    methodKind: "unary";
    input: typeof CreateBookmarkRequestSchema;
    output: typeof CreateBookmarkResponseSchema;
  },
  /**
   * GetBookmark returns the bookmark with the given UUID. This can also return snapshots as bookmarks and will strip the stored items from the response.
   *
   * @generated from rpc bookmarks.BookmarksService.GetBookmark
   */
  getBookmark: {
    methodKind: "unary";
    input: typeof GetBookmarkRequestSchema;
    output: typeof GetBookmarkResponseSchema;
  },
  /**
   * @generated from rpc bookmarks.BookmarksService.UpdateBookmark
   */
  updateBookmark: {
    methodKind: "unary";
    input: typeof UpdateBookmarkRequestSchema;
    output: typeof UpdateBookmarkResponseSchema;
  },
  /**
   * @generated from rpc bookmarks.BookmarksService.DeleteBookmark
   */
  deleteBookmark: {
    methodKind: "unary";
    input: typeof DeleteBookmarkRequestSchema;
    output: typeof DeleteBookmarkResponseSchema;
  },
  /**
   * a helper method to find all affected apps for a given blast radius snapshot
   *
   * @generated from rpc bookmarks.BookmarksService.GetAffectedBookmarks
   */
  getAffectedBookmarks: {
    methodKind: "unary";
    input: typeof GetAffectedBookmarksRequestSchema;
    output: typeof GetAffectedBookmarksResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_bookmarks, 0);

