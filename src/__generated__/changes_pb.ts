// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file changes.proto (package changes, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Bookmark } from "./bookmarks_pb";
import { file_bookmarks } from "./bookmarks_pb";
import type { Edge, Health, Item, Query, Reference } from "./items_pb";
import { file_items } from "./items_pb";
import type { Snapshot } from "./snapshots_pb";
import { file_snapshots } from "./snapshots_pb";
import type { BlastRadiusConfig } from "./config_pb";
import { file_config } from "./config_pb";
import type { PaginationRequest, PaginationResponse, SortOrder } from "./util_pb";
import { file_util } from "./util_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file changes.proto.
 */
export const file_changes: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_bookmarks, file_items, file_snapshots, file_config, file_util]);

/**
 * @generated from message changes.RuleMetadata
 */
export type RuleMetadata = Message<"changes.RuleMetadata"> & {
  /**
   * The unique identifier for this rule
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * The time that this rule was created
   *
   * @generated from field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;

  /**
   * The time that this rule was last run
   *
   * @generated from field: google.protobuf.Timestamp lastRunAt = 3;
   */
  lastRunAt?: Timestamp;

  /**
   * The time that this rule added a tag to a change
   *
   * @generated from field: google.protobuf.Timestamp lastActivated = 4;
   */
  lastActivated?: Timestamp;
};

/**
 * Describes the message changes.RuleMetadata.
 * Use `create(RuleMetadataSchema)` to create a new message.
 */
export const RuleMetadataSchema: GenMessage<RuleMetadata> = /*@__PURE__*/
  messageDesc(file_changes, 0);

/**
 * @generated from message changes.RuleProperties
 */
export type RuleProperties = Message<"changes.RuleProperties"> & {
  /**
   * The name of the rule, friendly for users
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The key that will be set in a change's tags if this rule is applied
   *
   * @generated from field: string tagKey = 2;
   */
  tagKey: string;

  /**
   * Whether the rule is enabled or not
   *
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;

  /**
   * The instructions that will be run by the llm to determine if the tag should
   * be applied and what its value should be
   *
   * @generated from field: string instructions = 4;
   */
  instructions: string;

  /**
   * A list of valid tag values.
   *
   * If this list is empty then the tag will have no value. Overmind will
   * evaluate the instructions in the context of each incoming change, and if
   * instructed, it will tag that change with the given `tagKey` and an empty
   * value.
   *
   * If this list is populated, Overmind will evaluate the instructions in the
   * context of each incoming change and decide; whether to tag the change at
   * all, and if so, what value to use.
   *
   * @generated from field: repeated string validValues = 5;
   */
  validValues: string[];
};

/**
 * Describes the message changes.RuleProperties.
 * Use `create(RulePropertiesSchema)` to create a new message.
 */
export const RulePropertiesSchema: GenMessage<RuleProperties> = /*@__PURE__*/
  messageDesc(file_changes, 1);

/**
 * @generated from message changes.Rule
 */
export type Rule = Message<"changes.Rule"> & {
  /**
   * The auto-generated metadata for this rule
   *
   * @generated from field: changes.RuleMetadata metadata = 1;
   */
  metadata?: RuleMetadata;

  /**
   * The user provided properties for this rule
   *
   * @generated from field: changes.RuleProperties properties = 2;
   */
  properties?: RuleProperties;
};

/**
 * Describes the message changes.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema: GenMessage<Rule> = /*@__PURE__*/
  messageDesc(file_changes, 2);

/**
 * @generated from message changes.ListRulesRequest
 */
export type ListRulesRequest = Message<"changes.ListRulesRequest"> & {
};

/**
 * Describes the message changes.ListRulesRequest.
 * Use `create(ListRulesRequestSchema)` to create a new message.
 */
export const ListRulesRequestSchema: GenMessage<ListRulesRequest> = /*@__PURE__*/
  messageDesc(file_changes, 3);

/**
 * @generated from message changes.ListRulesResponse
 */
export type ListRulesResponse = Message<"changes.ListRulesResponse"> & {
  /**
   * @generated from field: repeated changes.Rule rules = 1;
   */
  rules: Rule[];
};

/**
 * Describes the message changes.ListRulesResponse.
 * Use `create(ListRulesResponseSchema)` to create a new message.
 */
export const ListRulesResponseSchema: GenMessage<ListRulesResponse> = /*@__PURE__*/
  messageDesc(file_changes, 4);

/**
 * @generated from message changes.CreateRuleRequest
 */
export type CreateRuleRequest = Message<"changes.CreateRuleRequest"> & {
  /**
   * @generated from field: changes.RuleProperties properties = 1;
   */
  properties?: RuleProperties;
};

/**
 * Describes the message changes.CreateRuleRequest.
 * Use `create(CreateRuleRequestSchema)` to create a new message.
 */
export const CreateRuleRequestSchema: GenMessage<CreateRuleRequest> = /*@__PURE__*/
  messageDesc(file_changes, 5);

/**
 * @generated from message changes.CreateRuleResponse
 */
export type CreateRuleResponse = Message<"changes.CreateRuleResponse"> & {
  /**
   * @generated from field: changes.Rule rule = 1;
   */
  rule?: Rule;
};

/**
 * Describes the message changes.CreateRuleResponse.
 * Use `create(CreateRuleResponseSchema)` to create a new message.
 */
export const CreateRuleResponseSchema: GenMessage<CreateRuleResponse> = /*@__PURE__*/
  messageDesc(file_changes, 6);

/**
 * @generated from message changes.GetRuleRequest
 */
export type GetRuleRequest = Message<"changes.GetRuleRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.GetRuleRequest.
 * Use `create(GetRuleRequestSchema)` to create a new message.
 */
export const GetRuleRequestSchema: GenMessage<GetRuleRequest> = /*@__PURE__*/
  messageDesc(file_changes, 7);

/**
 * @generated from message changes.GetRuleResponse
 */
export type GetRuleResponse = Message<"changes.GetRuleResponse"> & {
  /**
   * @generated from field: changes.Rule rule = 1;
   */
  rule?: Rule;
};

/**
 * Describes the message changes.GetRuleResponse.
 * Use `create(GetRuleResponseSchema)` to create a new message.
 */
export const GetRuleResponseSchema: GenMessage<GetRuleResponse> = /*@__PURE__*/
  messageDesc(file_changes, 8);

/**
 * @generated from message changes.UpdateRuleRequest
 */
export type UpdateRuleRequest = Message<"changes.UpdateRuleRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * @generated from field: changes.RuleProperties properties = 2;
   */
  properties?: RuleProperties;
};

/**
 * Describes the message changes.UpdateRuleRequest.
 * Use `create(UpdateRuleRequestSchema)` to create a new message.
 */
export const UpdateRuleRequestSchema: GenMessage<UpdateRuleRequest> = /*@__PURE__*/
  messageDesc(file_changes, 9);

/**
 * @generated from message changes.UpdateRuleResponse
 */
export type UpdateRuleResponse = Message<"changes.UpdateRuleResponse"> & {
  /**
   * @generated from field: changes.Rule rule = 1;
   */
  rule?: Rule;
};

/**
 * Describes the message changes.UpdateRuleResponse.
 * Use `create(UpdateRuleResponseSchema)` to create a new message.
 */
export const UpdateRuleResponseSchema: GenMessage<UpdateRuleResponse> = /*@__PURE__*/
  messageDesc(file_changes, 10);

/**
 * @generated from message changes.DeleteRuleRequest
 */
export type DeleteRuleRequest = Message<"changes.DeleteRuleRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.DeleteRuleRequest.
 * Use `create(DeleteRuleRequestSchema)` to create a new message.
 */
export const DeleteRuleRequestSchema: GenMessage<DeleteRuleRequest> = /*@__PURE__*/
  messageDesc(file_changes, 11);

/**
 * @generated from message changes.DeleteRuleResponse
 */
export type DeleteRuleResponse = Message<"changes.DeleteRuleResponse"> & {
};

/**
 * Describes the message changes.DeleteRuleResponse.
 * Use `create(DeleteRuleResponseSchema)` to create a new message.
 */
export const DeleteRuleResponseSchema: GenMessage<DeleteRuleResponse> = /*@__PURE__*/
  messageDesc(file_changes, 12);

/**
 * @generated from message changes.ExportRuleRequest
 */
export type ExportRuleRequest = Message<"changes.ExportRuleRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.ExportRuleRequest.
 * Use `create(ExportRuleRequestSchema)` to create a new message.
 */
export const ExportRuleRequestSchema: GenMessage<ExportRuleRequest> = /*@__PURE__*/
  messageDesc(file_changes, 13);

/**
 * @generated from message changes.ExportRuleResponse
 */
export type ExportRuleResponse = Message<"changes.ExportRuleResponse"> & {
  /**
   * Content that should be added to auto-tagging config file to represent this
   * rule it is in the format that the cli expects
   *
   * @generated from field: string rule = 1;
   */
  rule: string;
};

/**
 * Describes the message changes.ExportRuleResponse.
 * Use `create(ExportRuleResponseSchema)` to create a new message.
 */
export const ExportRuleResponseSchema: GenMessage<ExportRuleResponse> = /*@__PURE__*/
  messageDesc(file_changes, 14);

/**
 * @generated from message changes.TestRuleRequest
 */
export type TestRuleRequest = Message<"changes.TestRuleRequest"> & {
  /**
   * The entire rule to test, so they don't have to save it first
   *
   * @generated from field: changes.RuleProperties properties = 1;
   */
  properties?: RuleProperties;

  /**
   * List of changes to test the rule on
   *
   * @generated from field: repeated bytes changeUUID = 2;
   */
  changeUUID: Uint8Array[];
};

/**
 * Describes the message changes.TestRuleRequest.
 * Use `create(TestRuleRequestSchema)` to create a new message.
 */
export const TestRuleRequestSchema: GenMessage<TestRuleRequest> = /*@__PURE__*/
  messageDesc(file_changes, 15);

/**
 * @generated from message changes.TestRuleResponse
 */
export type TestRuleResponse = Message<"changes.TestRuleResponse"> & {
  /**
   * The change UUID that the rule was tested against
   *
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;

  /**
   * Whether or not the tag was applied to this change
   *
   * @generated from field: bool applied = 2;
   */
  applied: boolean;

  /**
   * The value of the tag and the reasoning for it
   *
   * @generated from field: changes.AutoTagValue value = 3;
   */
  value?: AutoTagValue;
};

/**
 * Describes the message changes.TestRuleResponse.
 * Use `create(TestRuleResponseSchema)` to create a new message.
 */
export const TestRuleResponseSchema: GenMessage<TestRuleResponse> = /*@__PURE__*/
  messageDesc(file_changes, 16);

/**
 * @generated from message changes.GetChangeTimelineRequest
 */
export type GetChangeTimelineRequest = Message<"changes.GetChangeTimelineRequest"> & {
  /**
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.GetChangeTimelineRequest.
 * Use `create(GetChangeTimelineRequestSchema)` to create a new message.
 */
export const GetChangeTimelineRequestSchema: GenMessage<GetChangeTimelineRequest> = /*@__PURE__*/
  messageDesc(file_changes, 17);

/**
 * @generated from message changes.GetChangeTimelineResponse
 */
export type GetChangeTimelineResponse = Message<"changes.GetChangeTimelineResponse"> & {
  /**
   * @generated from field: repeated changes.ChangeTimelineEntry entries = 1;
   */
  entries: ChangeTimelineEntry[];
};

/**
 * Describes the message changes.GetChangeTimelineResponse.
 * Use `create(GetChangeTimelineResponseSchema)` to create a new message.
 */
export const GetChangeTimelineResponseSchema: GenMessage<GetChangeTimelineResponse> = /*@__PURE__*/
  messageDesc(file_changes, 18);

/**
 * @generated from message changes.ChangeTimelineEntry
 */
export type ChangeTimelineEntry = Message<"changes.ChangeTimelineEntry"> & {
  /**
   * The status that this event should be associated with. Usually this would be
   * the status that the changed ended up in as a result of this action
   *
   * @generated from field: changes.ChangeStatus status = 1;
   */
  status: ChangeStatus;

  /**
   * The message that describes this event
   *
   * @generated from field: string statusMessage = 2;
   */
  statusMessage: string;

  /**
   * The time that this event happened
   *
   * @generated from field: google.protobuf.Timestamp happenedAt = 3;
   */
  happenedAt?: Timestamp;

  /**
   * The name of the user that performed this action
   *
   * @generated from field: string actorName = 4;
   */
  actorName: string;
};

/**
 * Describes the message changes.ChangeTimelineEntry.
 * Use `create(ChangeTimelineEntrySchema)` to create a new message.
 */
export const ChangeTimelineEntrySchema: GenMessage<ChangeTimelineEntry> = /*@__PURE__*/
  messageDesc(file_changes, 19);

/**
 * @generated from message changes.GetDiffRequest
 */
export type GetDiffRequest = Message<"changes.GetDiffRequest"> & {
  /**
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.GetDiffRequest.
 * Use `create(GetDiffRequestSchema)` to create a new message.
 */
export const GetDiffRequestSchema: GenMessage<GetDiffRequest> = /*@__PURE__*/
  messageDesc(file_changes, 20);

/**
 * @generated from message changes.GetDiffResponse
 */
export type GetDiffResponse = Message<"changes.GetDiffResponse"> & {
  /**
   * Items that were planned to be changed, and were changed
   *
   * @generated from field: repeated changes.ItemDiff expectedItems = 1;
   */
  expectedItems: ItemDiff[];

  /**
   * Items that were changed, but were not planned to be changed
   *
   * @generated from field: repeated changes.ItemDiff unexpectedItems = 3;
   */
  unexpectedItems: ItemDiff[];

  /**
   * @generated from field: repeated Edge edges = 2;
   */
  edges: Edge[];

  /**
   * Items that were planned to be changed, but were not changed
   *
   * @generated from field: repeated changes.ItemDiff missingItems = 4;
   */
  missingItems: ItemDiff[];
};

/**
 * Describes the message changes.GetDiffResponse.
 * Use `create(GetDiffResponseSchema)` to create a new message.
 */
export const GetDiffResponseSchema: GenMessage<GetDiffResponse> = /*@__PURE__*/
  messageDesc(file_changes, 21);

/**
 * @generated from message changes.ListChangingItemsSummaryRequest
 */
export type ListChangingItemsSummaryRequest = Message<"changes.ListChangingItemsSummaryRequest"> & {
  /**
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.ListChangingItemsSummaryRequest.
 * Use `create(ListChangingItemsSummaryRequestSchema)` to create a new message.
 */
export const ListChangingItemsSummaryRequestSchema: GenMessage<ListChangingItemsSummaryRequest> = /*@__PURE__*/
  messageDesc(file_changes, 22);

/**
 * @generated from message changes.ListChangingItemsSummaryResponse
 */
export type ListChangingItemsSummaryResponse = Message<"changes.ListChangingItemsSummaryResponse"> & {
  /**
   * @generated from field: repeated changes.ItemDiffSummary items = 1;
   */
  items: ItemDiffSummary[];
};

/**
 * Describes the message changes.ListChangingItemsSummaryResponse.
 * Use `create(ListChangingItemsSummaryResponseSchema)` to create a new message.
 */
export const ListChangingItemsSummaryResponseSchema: GenMessage<ListChangingItemsSummaryResponse> = /*@__PURE__*/
  messageDesc(file_changes, 23);

/**
 * @generated from message changes.GetAffectedAppsRequest
 */
export type GetAffectedAppsRequest = Message<"changes.GetAffectedAppsRequest"> & {
  /**
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.GetAffectedAppsRequest.
 * Use `create(GetAffectedAppsRequestSchema)` to create a new message.
 */
export const GetAffectedAppsRequestSchema: GenMessage<GetAffectedAppsRequest> = /*@__PURE__*/
  messageDesc(file_changes, 24);

/**
 * @generated from message changes.GetAffectedAppsResponse
 */
export type GetAffectedAppsResponse = Message<"changes.GetAffectedAppsResponse"> & {
  /**
   * @generated from field: repeated changes.AppSummary apps = 1;
   */
  apps: AppSummary[];
};

/**
 * Describes the message changes.GetAffectedAppsResponse.
 * Use `create(GetAffectedAppsResponseSchema)` to create a new message.
 */
export const GetAffectedAppsResponseSchema: GenMessage<GetAffectedAppsResponse> = /*@__PURE__*/
  messageDesc(file_changes, 25);

/**
 * @generated from message changes.UpdateChangingItemsRequest
 */
export type UpdateChangingItemsRequest = Message<"changes.UpdateChangingItemsRequest"> & {
  /**
   * The change to update
   *
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;

  /**
   * References to the items that are changing
   *
   * @generated from field: repeated Reference changingItems = 2;
   */
  changingItems: Reference[];
};

/**
 * Describes the message changes.UpdateChangingItemsRequest.
 * Use `create(UpdateChangingItemsRequestSchema)` to create a new message.
 */
export const UpdateChangingItemsRequestSchema: GenMessage<UpdateChangingItemsRequest> = /*@__PURE__*/
  messageDesc(file_changes, 26);

/**
 * @generated from message changes.MappedItemDiff
 */
export type MappedItemDiff = Message<"changes.MappedItemDiff"> & {
  /**
   * The item that is changing and any known changes to it
   *
   * @generated from field: changes.ItemDiff item = 1;
   */
  item?: ItemDiff;

  /**
   * a mapping query that can be used to find the item. this can be empty if the
   * submitter does not know how to map this item.
   *
   * @generated from field: optional Query mappingQuery = 2;
   */
  mappingQuery?: Query;
};

/**
 * Describes the message changes.MappedItemDiff.
 * Use `create(MappedItemDiffSchema)` to create a new message.
 */
export const MappedItemDiffSchema: GenMessage<MappedItemDiff> = /*@__PURE__*/
  messageDesc(file_changes, 27);

/**
 * @generated from message changes.UpdatePlannedChangesRequest
 */
export type UpdatePlannedChangesRequest = Message<"changes.UpdatePlannedChangesRequest"> & {
  /**
   * The change to update
   *
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;

  /**
   * The changing items
   *
   * @generated from field: repeated changes.MappedItemDiff changingItems = 2;
   */
  changingItems: MappedItemDiff[];

  /**
   * Overrides the stored blast radius config for this change
   *
   * @generated from field: optional config.BlastRadiusConfig blastRadiusConfigOverride = 3;
   */
  blastRadiusConfigOverride?: BlastRadiusConfig;

  /**
   * Overrides the auto-tagging rules with rules that have been read from the
   * local config file. If this is empty the rules that have been configured in
   * the UI will be used
   *
   * @generated from field: repeated changes.RuleProperties autoTaggingRulesOverride = 4;
   */
  autoTaggingRulesOverride: RuleProperties[];
};

/**
 * Describes the message changes.UpdatePlannedChangesRequest.
 * Use `create(UpdatePlannedChangesRequestSchema)` to create a new message.
 */
export const UpdatePlannedChangesRequestSchema: GenMessage<UpdatePlannedChangesRequest> = /*@__PURE__*/
  messageDesc(file_changes, 28);

/**
 * @generated from message changes.ListAppChangesSummaryRequest
 */
export type ListAppChangesSummaryRequest = Message<"changes.ListAppChangesSummaryRequest"> & {
  /**
   * @generated from field: bytes appUUID = 1;
   */
  appUUID: Uint8Array;
};

/**
 * Describes the message changes.ListAppChangesSummaryRequest.
 * Use `create(ListAppChangesSummaryRequestSchema)` to create a new message.
 */
export const ListAppChangesSummaryRequestSchema: GenMessage<ListAppChangesSummaryRequest> = /*@__PURE__*/
  messageDesc(file_changes, 29);

/**
 * @generated from message changes.ListAppChangesSummaryResponse
 */
export type ListAppChangesSummaryResponse = Message<"changes.ListAppChangesSummaryResponse"> & {
  /**
   * @generated from field: repeated changes.ChangeSummary changes = 1;
   */
  changes: ChangeSummary[];
};

/**
 * Describes the message changes.ListAppChangesSummaryResponse.
 * Use `create(ListAppChangesSummaryResponseSchema)` to create a new message.
 */
export const ListAppChangesSummaryResponseSchema: GenMessage<ListAppChangesSummaryResponse> = /*@__PURE__*/
  messageDesc(file_changes, 30);

/**
 * @generated from message changes.GetAppSummaryRequest
 */
export type GetAppSummaryRequest = Message<"changes.GetAppSummaryRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.GetAppSummaryRequest.
 * Use `create(GetAppSummaryRequestSchema)` to create a new message.
 */
export const GetAppSummaryRequestSchema: GenMessage<GetAppSummaryRequest> = /*@__PURE__*/
  messageDesc(file_changes, 31);

/**
 * @generated from message changes.GetAppSummaryResponse
 */
export type GetAppSummaryResponse = Message<"changes.GetAppSummaryResponse"> & {
  /**
   * @generated from field: changes.AppSummary app = 1;
   */
  app?: AppSummary;
};

/**
 * Describes the message changes.GetAppSummaryResponse.
 * Use `create(GetAppSummaryResponseSchema)` to create a new message.
 */
export const GetAppSummaryResponseSchema: GenMessage<GetAppSummaryResponse> = /*@__PURE__*/
  messageDesc(file_changes, 32);

/**
 * @generated from message changes.GetAppSummariesRequest
 */
export type GetAppSummariesRequest = Message<"changes.GetAppSummariesRequest"> & {
  /**
   * @generated from field: repeated bytes UUIDs = 1;
   */
  UUIDs: Uint8Array[];
};

/**
 * Describes the message changes.GetAppSummariesRequest.
 * Use `create(GetAppSummariesRequestSchema)` to create a new message.
 */
export const GetAppSummariesRequestSchema: GenMessage<GetAppSummariesRequest> = /*@__PURE__*/
  messageDesc(file_changes, 33);

/**
 * @generated from message changes.GetAppSummariesResponse
 */
export type GetAppSummariesResponse = Message<"changes.GetAppSummariesResponse"> & {
  /**
   * @generated from field: repeated changes.AppSummary apps = 1;
   */
  apps: AppSummary[];
};

/**
 * Describes the message changes.GetAppSummariesResponse.
 * Use `create(GetAppSummariesResponseSchema)` to create a new message.
 */
export const GetAppSummariesResponseSchema: GenMessage<GetAppSummariesResponse> = /*@__PURE__*/
  messageDesc(file_changes, 34);

/**
 * @generated from message changes.ListHomeChangesRequest
 */
export type ListHomeChangesRequest = Message<"changes.ListHomeChangesRequest"> & {
  /**
   * @generated from field: PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional changes.ChangeFiltersRequest filters = 2;
   */
  filters?: ChangeFiltersRequest;
};

/**
 * Describes the message changes.ListHomeChangesRequest.
 * Use `create(ListHomeChangesRequestSchema)` to create a new message.
 */
export const ListHomeChangesRequestSchema: GenMessage<ListHomeChangesRequest> = /*@__PURE__*/
  messageDesc(file_changes, 35);

/**
 * ChangeFiltersRequest is used for filtering on the changes page.
 * Repeated entries of the same type are used to represent OR conditions. eg if repo is ["a", "b"] then the filter is (repo == "a" OR repo == "b")
 * The filters are ANDed together. eg if repo is ["a", "b"] and author is ["c"] then the filter is (repo == "a" OR repo == "b") AND author == "c"
 *
 * @generated from message changes.ChangeFiltersRequest
 */
export type ChangeFiltersRequest = Message<"changes.ChangeFiltersRequest"> & {
  /**
   * @generated from field: repeated string repos = 1;
   */
  repos: string[];

  /**
   * @generated from field: map<string, string> tags = 2;
   */
  tags: { [key: string]: string };

  /**
   * @generated from field: repeated changes.Risk.Severity risks = 3;
   */
  risks: Risk_Severity[];

  /**
   * @generated from field: repeated string authors = 4;
   */
  authors: string[];

  /**
   * @generated from field: repeated changes.ChangeStatus statuses = 5;
   */
  statuses: ChangeStatus[];

  /**
   * the default is SortOrder.DATE_DESCENDING (newest first)
   *
   * @generated from field: optional SortOrder sortOrder = 6;
   */
  sortOrder?: SortOrder;
};

/**
 * Describes the message changes.ChangeFiltersRequest.
 * Use `create(ChangeFiltersRequestSchema)` to create a new message.
 */
export const ChangeFiltersRequestSchema: GenMessage<ChangeFiltersRequest> = /*@__PURE__*/
  messageDesc(file_changes, 36);

/**
 * @generated from message changes.ListHomeChangesResponse
 */
export type ListHomeChangesResponse = Message<"changes.ListHomeChangesResponse"> & {
  /**
   * @generated from field: repeated changes.ChangeSummary changes = 1;
   */
  changes: ChangeSummary[];

  /**
   * @generated from field: PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message changes.ListHomeChangesResponse.
 * Use `create(ListHomeChangesResponseSchema)` to create a new message.
 */
export const ListHomeChangesResponseSchema: GenMessage<ListHomeChangesResponse> = /*@__PURE__*/
  messageDesc(file_changes, 37);

/**
 * @generated from message changes.PopulateChangeFiltersRequest
 */
export type PopulateChangeFiltersRequest = Message<"changes.PopulateChangeFiltersRequest"> & {
};

/**
 * Describes the message changes.PopulateChangeFiltersRequest.
 * Use `create(PopulateChangeFiltersRequestSchema)` to create a new message.
 */
export const PopulateChangeFiltersRequestSchema: GenMessage<PopulateChangeFiltersRequest> = /*@__PURE__*/
  messageDesc(file_changes, 38);

/**
 * @generated from message changes.PopulateChangeFiltersResponse
 */
export type PopulateChangeFiltersResponse = Message<"changes.PopulateChangeFiltersResponse"> & {
  /**
   * @generated from field: repeated string repos = 1;
   */
  repos: string[];

  /**
   * @generated from field: repeated string authors = 2;
   */
  authors: string[];
};

/**
 * Describes the message changes.PopulateChangeFiltersResponse.
 * Use `create(PopulateChangeFiltersResponseSchema)` to create a new message.
 */
export const PopulateChangeFiltersResponseSchema: GenMessage<PopulateChangeFiltersResponse> = /*@__PURE__*/
  messageDesc(file_changes, 39);

/**
 * @generated from message changes.ListHomeAppsRequest
 */
export type ListHomeAppsRequest = Message<"changes.ListHomeAppsRequest"> & {
};

/**
 * Describes the message changes.ListHomeAppsRequest.
 * Use `create(ListHomeAppsRequestSchema)` to create a new message.
 */
export const ListHomeAppsRequestSchema: GenMessage<ListHomeAppsRequest> = /*@__PURE__*/
  messageDesc(file_changes, 40);

/**
 * @generated from message changes.ListHomeAppsResponse
 */
export type ListHomeAppsResponse = Message<"changes.ListHomeAppsResponse"> & {
  /**
   * @generated from field: repeated changes.AppSummary apps = 1;
   */
  apps: AppSummary[];
};

/**
 * Describes the message changes.ListHomeAppsResponse.
 * Use `create(ListHomeAppsResponseSchema)` to create a new message.
 */
export const ListHomeAppsResponseSchema: GenMessage<ListHomeAppsResponse> = /*@__PURE__*/
  messageDesc(file_changes, 41);

/**
 * Editor's node: I'm using references here rather than just directly
 * embedding the name, uniqueAttributeValue and scope because the reference
 * structs have some methods on them which it might be useful to use (like
 * `String()`), and that some methods will accept a reference as a parameter
 * and it doesn't make sense to have to re-construct one if you already have
 * all the required data
 *
 * @generated from message changes.ItemDiffSummary
 */
export type ItemDiffSummary = Message<"changes.ItemDiffSummary"> & {
  /**
   * A reference to the item that this diff is related to
   *
   * @generated from field: Reference item = 1;
   */
  item?: Reference;

  /**
   * The status of the item
   *
   * @generated from field: changes.ItemDiffStatus status = 4;
   */
  status: ItemDiffStatus;

  /**
   * The health of the item currently (as opposed to before the change)
   *
   * @generated from field: Health healthAfter = 5;
   */
  healthAfter: Health;
};

/**
 * Describes the message changes.ItemDiffSummary.
 * Use `create(ItemDiffSummarySchema)` to create a new message.
 */
export const ItemDiffSummarySchema: GenMessage<ItemDiffSummary> = /*@__PURE__*/
  messageDesc(file_changes, 42);

/**
 * @generated from message changes.ItemDiff
 */
export type ItemDiff = Message<"changes.ItemDiff"> & {
  /**
   * A reference to the item that this diff is related to
   *
   * @generated from field: Reference item = 1;
   */
  item?: Reference;

  /**
   * The status of the item
   *
   * @generated from field: changes.ItemDiffStatus status = 2;
   */
  status: ItemDiffStatus;

  /**
   * @generated from field: Item before = 3;
   */
  before?: Item;

  /**
   * @generated from field: Item after = 4;
   */
  after?: Item;
};

/**
 * Describes the message changes.ItemDiff.
 * Use `create(ItemDiffSchema)` to create a new message.
 */
export const ItemDiffSchema: GenMessage<ItemDiff> = /*@__PURE__*/
  messageDesc(file_changes, 43);

/**
 * @generated from message changes.AppSummary
 */
export type AppSummary = Message<"changes.AppSummary"> & {
  /**
   * unique id to identify this app
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * Name of this App
   * Example: "Contoso Manager"
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Description of this App Example: "The Contoso Manager manages the contoso.
   * Notable components are storage, compute and the web. Talk to Jimmy or Susan
   * on 555-CM LEAD for more details."
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * number of changes that have affected this app
   *
   * @generated from field: int32 numChangesAffecting = 4;
   */
  numChangesAffecting: number;

  /**
   * the number of items that make up this app
   *
   * @generated from field: int32 numItems = 5;
   */
  numItems: number;

  /**
   * timestamp when this app was created
   *
   * @generated from field: google.protobuf.Timestamp createdAt = 6;
   */
  createdAt?: Timestamp;

  /**
   * The name of the person that created the app
   *
   * @generated from field: string creatorName = 7;
   */
  creatorName: string;

  /**
   * the url for this app. This will only be set if the app was created using
   * the `CreateSimpleApp` RPC.
   *
   * @generated from field: string url = 9;
   */
  url: string;

  /**
   * UUID of the bookmark query that returns all items in this app
   *
   * @generated from field: bytes bookmarkUUID = 10;
   */
  bookmarkUUID: Uint8Array;
};

/**
 * Describes the message changes.AppSummary.
 * Use `create(AppSummarySchema)` to create a new message.
 */
export const AppSummarySchema: GenMessage<AppSummary> = /*@__PURE__*/
  messageDesc(file_changes, 44);

/**
 * a complete App with machine-supplied and user-supplied values
 *
 * @generated from message changes.App
 */
export type App = Message<"changes.App"> & {
  /**
   * machine-generated metadata of this app
   *
   * @generated from field: changes.AppMetadata metadata = 1;
   */
  metadata?: AppMetadata;

  /**
   * user-supplied properties of this app
   *
   * @generated from field: changes.AppProperties properties = 2;
   */
  properties?: AppProperties;
};

/**
 * Describes the message changes.App.
 * Use `create(AppSchema)` to create a new message.
 */
export const AppSchema: GenMessage<App> = /*@__PURE__*/
  messageDesc(file_changes, 45);

/**
 * machine-generated metadata of this app
 *
 * @generated from message changes.AppMetadata
 */
export type AppMetadata = Message<"changes.AppMetadata"> & {
  /**
   * unique id to identify this app
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * timestamp when this app was created
   *
   * @generated from field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;

  /**
   * timestamp when this app was last updated
   *
   * @generated from field: google.protobuf.Timestamp updatedAt = 3;
   */
  updatedAt?: Timestamp;

  /**
   * items that are part of the app
   *
   * @generated from field: repeated Reference items = 4;
   */
  items: Reference[];

  /**
   * the last time that the list of items was updated
   *
   * @generated from field: google.protobuf.Timestamp itemsLastUpdated = 5;
   */
  itemsLastUpdated?: Timestamp;

  /**
   * number of changes that have affected this app
   *
   * @generated from field: int32 numChangesAffecting = 6;
   */
  numChangesAffecting: number;

  /**
   * the number of items that make up this app
   *
   * @generated from field: int32 numItems = 8;
   */
  numItems: number;

  /**
   * the name of the person that created the app
   *
   * @generated from field: string creatorName = 7;
   */
  creatorName: string;

  /**
   * the url for this app. This will only be set if the app was created using
   * the `CreateSimpleApp` RPC.
   *
   * @generated from field: string url = 9;
   */
  url: string;
};

/**
 * Describes the message changes.AppMetadata.
 * Use `create(AppMetadataSchema)` to create a new message.
 */
export const AppMetadataSchema: GenMessage<AppMetadata> = /*@__PURE__*/
  messageDesc(file_changes, 46);

/**
 * user-supplied properties of this app
 *
 * @generated from message changes.AppProperties
 */
export type AppProperties = Message<"changes.AppProperties"> & {
  /**
   * Name of this App
   * Example: "Contoso Manager"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Description of this App. Example: "The Contoso Manager manages the contoso.
   * Notable components are storage, compute and the web. Talk to Jimmy or Susan
   * on 555-CM LEAD for more details."
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * UUID of the bookmark query that returns all items in this app
   *
   * @generated from field: bytes bookmarkUUID = 3;
   */
  bookmarkUUID: Uint8Array;
};

/**
 * Describes the message changes.AppProperties.
 * Use `create(AppPropertiesSchema)` to create a new message.
 */
export const AppPropertiesSchema: GenMessage<AppProperties> = /*@__PURE__*/
  messageDesc(file_changes, 47);

/**
 * list all apps
 *
 * @generated from message changes.ListAppsRequest
 */
export type ListAppsRequest = Message<"changes.ListAppsRequest"> & {
};

/**
 * Describes the message changes.ListAppsRequest.
 * Use `create(ListAppsRequestSchema)` to create a new message.
 */
export const ListAppsRequestSchema: GenMessage<ListAppsRequest> = /*@__PURE__*/
  messageDesc(file_changes, 48);

/**
 * @generated from message changes.ListAppsResponse
 */
export type ListAppsResponse = Message<"changes.ListAppsResponse"> & {
  /**
   * @generated from field: repeated changes.App apps = 1;
   */
  apps: App[];
};

/**
 * Describes the message changes.ListAppsResponse.
 * Use `create(ListAppsResponseSchema)` to create a new message.
 */
export const ListAppsResponseSchema: GenMessage<ListAppsResponse> = /*@__PURE__*/
  messageDesc(file_changes, 49);

/**
 * create a new app
 *
 * @generated from message changes.CreateAppRequest
 */
export type CreateAppRequest = Message<"changes.CreateAppRequest"> & {
  /**
   * @generated from field: changes.AppProperties properties = 1;
   */
  properties?: AppProperties;
};

/**
 * Describes the message changes.CreateAppRequest.
 * Use `create(CreateAppRequestSchema)` to create a new message.
 */
export const CreateAppRequestSchema: GenMessage<CreateAppRequest> = /*@__PURE__*/
  messageDesc(file_changes, 50);

/**
 * @generated from message changes.CreateAppResponse
 */
export type CreateAppResponse = Message<"changes.CreateAppResponse"> & {
  /**
   * @generated from field: changes.App app = 1;
   */
  app?: App;
};

/**
 * Describes the message changes.CreateAppResponse.
 * Use `create(CreateAppResponseSchema)` to create a new message.
 */
export const CreateAppResponseSchema: GenMessage<CreateAppResponse> = /*@__PURE__*/
  messageDesc(file_changes, 51);

/**
 * @generated from message changes.CreateSimpleAppRequest
 */
export type CreateSimpleAppRequest = Message<"changes.CreateSimpleAppRequest"> & {
  /**
   * The name of the app
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The description of the app
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The URL of the app
   *
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message changes.CreateSimpleAppRequest.
 * Use `create(CreateSimpleAppRequestSchema)` to create a new message.
 */
export const CreateSimpleAppRequestSchema: GenMessage<CreateSimpleAppRequest> = /*@__PURE__*/
  messageDesc(file_changes, 52);

/**
 * @generated from message changes.CreateSimpleAppResponse
 */
export type CreateSimpleAppResponse = Message<"changes.CreateSimpleAppResponse"> & {
  /**
   * @generated from field: changes.App app = 1;
   */
  app?: App;
};

/**
 * Describes the message changes.CreateSimpleAppResponse.
 * Use `create(CreateSimpleAppResponseSchema)` to create a new message.
 */
export const CreateSimpleAppResponseSchema: GenMessage<CreateSimpleAppResponse> = /*@__PURE__*/
  messageDesc(file_changes, 53);

/**
 * get the details of an existing app
 *
 * @generated from message changes.GetAppRequest
 */
export type GetAppRequest = Message<"changes.GetAppRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.GetAppRequest.
 * Use `create(GetAppRequestSchema)` to create a new message.
 */
export const GetAppRequestSchema: GenMessage<GetAppRequest> = /*@__PURE__*/
  messageDesc(file_changes, 54);

/**
 * @generated from message changes.GetAppResponse
 */
export type GetAppResponse = Message<"changes.GetAppResponse"> & {
  /**
   * @generated from field: changes.App app = 1;
   */
  app?: App;
};

/**
 * Describes the message changes.GetAppResponse.
 * Use `create(GetAppResponseSchema)` to create a new message.
 */
export const GetAppResponseSchema: GenMessage<GetAppResponse> = /*@__PURE__*/
  messageDesc(file_changes, 55);

/**
 * update an existing app
 *
 * @generated from message changes.UpdateAppRequest
 */
export type UpdateAppRequest = Message<"changes.UpdateAppRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * @generated from field: changes.AppProperties properties = 2;
   */
  properties?: AppProperties;
};

/**
 * Describes the message changes.UpdateAppRequest.
 * Use `create(UpdateAppRequestSchema)` to create a new message.
 */
export const UpdateAppRequestSchema: GenMessage<UpdateAppRequest> = /*@__PURE__*/
  messageDesc(file_changes, 56);

/**
 * @generated from message changes.UpdateAppResponse
 */
export type UpdateAppResponse = Message<"changes.UpdateAppResponse"> & {
  /**
   * @generated from field: changes.App app = 1;
   */
  app?: App;
};

/**
 * Describes the message changes.UpdateAppResponse.
 * Use `create(UpdateAppResponseSchema)` to create a new message.
 */
export const UpdateAppResponseSchema: GenMessage<UpdateAppResponse> = /*@__PURE__*/
  messageDesc(file_changes, 57);

/**
 * delete an app
 *
 * @generated from message changes.DeleteAppRequest
 */
export type DeleteAppRequest = Message<"changes.DeleteAppRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.DeleteAppRequest.
 * Use `create(DeleteAppRequestSchema)` to create a new message.
 */
export const DeleteAppRequestSchema: GenMessage<DeleteAppRequest> = /*@__PURE__*/
  messageDesc(file_changes, 58);

/**
 * @generated from message changes.DeleteAppResponse
 */
export type DeleteAppResponse = Message<"changes.DeleteAppResponse"> & {
};

/**
 * Describes the message changes.DeleteAppResponse.
 * Use `create(DeleteAppResponseSchema)` to create a new message.
 */
export const DeleteAppResponseSchema: GenMessage<DeleteAppResponse> = /*@__PURE__*/
  messageDesc(file_changes, 59);

/**
 * list all changes for an app
 *
 * @generated from message changes.ListAppChangesRequest
 */
export type ListAppChangesRequest = Message<"changes.ListAppChangesRequest"> & {
  /**
   * The UUID of the app to list changes for
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.ListAppChangesRequest.
 * Use `create(ListAppChangesRequestSchema)` to create a new message.
 */
export const ListAppChangesRequestSchema: GenMessage<ListAppChangesRequest> = /*@__PURE__*/
  messageDesc(file_changes, 60);

/**
 * @generated from message changes.ListAppChangesResponse
 */
export type ListAppChangesResponse = Message<"changes.ListAppChangesResponse"> & {
  /**
   * The list of changes related to an app
   *
   * @generated from field: repeated changes.Change changes = 1;
   */
  changes: Change[];
};

/**
 * Describes the message changes.ListAppChangesResponse.
 * Use `create(ListAppChangesResponseSchema)` to create a new message.
 */
export const ListAppChangesResponseSchema: GenMessage<ListAppChangesResponse> = /*@__PURE__*/
  messageDesc(file_changes, 61);

/**
 * @generated from message changes.TagValue
 */
export type TagValue = Message<"changes.TagValue"> & {
  /**
   * The value of the tag, this can be user-defined or auto-generated
   *
   * @generated from oneof changes.TagValue.value
   */
  value: {
    /**
     * @generated from field: changes.UserTagValue userTagValue = 1;
     */
    value: UserTagValue;
    case: "userTagValue";
  } | {
    /**
     * @generated from field: changes.AutoTagValue autoTagValue = 2;
     */
    value: AutoTagValue;
    case: "autoTagValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message changes.TagValue.
 * Use `create(TagValueSchema)` to create a new message.
 */
export const TagValueSchema: GenMessage<TagValue> = /*@__PURE__*/
  messageDesc(file_changes, 62);

/**
 * @generated from message changes.UserTagValue
 */
export type UserTagValue = Message<"changes.UserTagValue"> & {
  /**
   * The value of the tag that was set by the user.
   *
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message changes.UserTagValue.
 * Use `create(UserTagValueSchema)` to create a new message.
 */
export const UserTagValueSchema: GenMessage<UserTagValue> = /*@__PURE__*/
  messageDesc(file_changes, 63);

/**
 * @generated from message changes.AutoTagValue
 */
export type AutoTagValue = Message<"changes.AutoTagValue"> & {
  /**
   * The value of the tag
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * Reasoning for this decision
   *
   * @generated from field: string reasoning = 2;
   */
  reasoning: string;
};

/**
 * Describes the message changes.AutoTagValue.
 * Use `create(AutoTagValueSchema)` to create a new message.
 */
export const AutoTagValueSchema: GenMessage<AutoTagValue> = /*@__PURE__*/
  messageDesc(file_changes, 64);

/**
 * A smaller summary of a change
 *
 * @generated from message changes.ChangeSummary
 */
export type ChangeSummary = Message<"changes.ChangeSummary"> & {
  /**
   * unique id to identify this change
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * Short title for this change.
   * Example: "database upgrade"
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * The current status of this change. This is changed by the lifecycle
   * functions such as `StartChange` and `EndChange`.
   *
   * @generated from field: changes.ChangeStatus status = 3;
   */
  status: ChangeStatus;

  /**
   * Link to the ticket for this change.
   * Example: "http://jira.contoso-engineering.com/browse/CM-1337"
   *
   * @generated from field: string ticketLink = 4;
   */
  ticketLink: string;

  /**
   * timestamp when this change was created
   *
   * @generated from field: google.protobuf.Timestamp createdAt = 5;
   */
  createdAt?: Timestamp;

  /**
   * The name of the user that created the change
   *
   * @generated from field: string creatorName = 6;
   */
  creatorName: string;

  /**
   * The email of the user that created the change
   *
   * @generated from field: string creatorEmail = 15;
   */
  creatorEmail: string;

  /**
   * The number of apps that will be affected by this change
   *
   * @generated from field: int32 numAffectedApps = 8;
   */
  numAffectedApps: number;

  /**
   * The number of items in the blast radius of this change
   *
   * @generated from field: int32 numAffectedItems = 9;
   */
  numAffectedItems: number;

  /**
   * The number of edges in the blast radius of this change
   *
   * @generated from field: int32 numAffectedEdges = 10;
   */
  numAffectedEdges: number;

  /**
   * The number of low risks in this change
   *
   * @generated from field: int32 numLowRisk = 11;
   */
  numLowRisk: number;

  /**
   * The number of medium risks in this change
   *
   * @generated from field: int32 numMediumRisk = 12;
   */
  numMediumRisk: number;

  /**
   * The number of high risks in this change
   *
   * @generated from field: int32 numHighRisk = 13;
   */
  numHighRisk: number;

  /**
   * Quick description of the change.
   * Example: "upgrade of the database to get access to the new contoso management processor"
   *
   * @generated from field: string description = 14;
   */
  description: string;

  /**
   * Repo information; can be an empty string. CLI attempts auto-population, but
   * users can override. Not necessarily a URL. The UI will be responsible for
   * any formatting/shortening/sprucing up should it be required.
   *
   * @generated from field: string repo = 16;
   */
  repo: string;

  /**
   * Tags that were set bu the user when the tag was created
   *
   * Deprecated: Use enrichedTags instead
   *
   * @generated from field: map<string, string> tags = 17 [deprecated = true];
   * @deprecated
   */
  tags: { [key: string]: string };

  /**
   * Tags associated with this change
   *
   * @generated from field: map<string, changes.TagValue> enrichedTags = 18;
   */
  enrichedTags: { [key: string]: TagValue };
};

/**
 * Describes the message changes.ChangeSummary.
 * Use `create(ChangeSummarySchema)` to create a new message.
 */
export const ChangeSummarySchema: GenMessage<ChangeSummary> = /*@__PURE__*/
  messageDesc(file_changes, 65);

/**
 * a complete Change with machine-supplied and user-supplied values
 *
 * @generated from message changes.Change
 */
export type Change = Message<"changes.Change"> & {
  /**
   * machine-generated metadata of this change
   *
   * @generated from field: changes.ChangeMetadata metadata = 1;
   */
  metadata?: ChangeMetadata;

  /**
   * user-supplied properties of this change
   *
   * @generated from field: changes.ChangeProperties properties = 2;
   */
  properties?: ChangeProperties;
};

/**
 * Describes the message changes.Change.
 * Use `create(ChangeSchema)` to create a new message.
 */
export const ChangeSchema: GenMessage<Change> = /*@__PURE__*/
  messageDesc(file_changes, 66);

/**
 * machine-generated metadata of this change
 *
 * @generated from message changes.ChangeMetadata
 */
export type ChangeMetadata = Message<"changes.ChangeMetadata"> & {
  /**
   * unique id to identify this change
   *
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * timestamp when this change was created
   *
   * @generated from field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;

  /**
   * timestamp when this change was last updated
   *
   * @generated from field: google.protobuf.Timestamp updatedAt = 3;
   */
  updatedAt?: Timestamp;

  /**
   * The current status of this change. This is changed by the lifecycle
   * functions such as `StartChange` and `EndChange`.
   *
   * @generated from field: changes.ChangeStatus status = 4;
   */
  status: ChangeStatus;

  /**
   * The name of the user that created the change
   *
   * @generated from field: string creatorName = 5;
   */
  creatorName: string;

  /**
   * The email of the user that created the change
   *
   * @generated from field: string creatorEmail = 19;
   */
  creatorEmail: string;

  /**
   * The number of apps that will be affected by this change
   *
   * @generated from field: int32 numAffectedApps = 6;
   */
  numAffectedApps: number;

  /**
   * The number of items in the blast radius if this change
   *
   * @generated from field: int32 numAffectedItems = 7;
   */
  numAffectedItems: number;

  /**
   * The number of edges in the blast radius if this change
   *
   * @generated from field: int32 numAffectedEdges = 17;
   */
  numAffectedEdges: number;

  /**
   * The number of items within the blast radius that were not affected by this
   * change
   *
   * @generated from field: int32 numUnchangedItems = 8;
   */
  numUnchangedItems: number;

  /**
   * The number of items that were created as part of this change
   *
   * @generated from field: int32 numCreatedItems = 9;
   */
  numCreatedItems: number;

  /**
   * The number of items that were updated as part of this change
   *
   * @generated from field: int32 numUpdatedItems = 10;
   */
  numUpdatedItems: number;

  /**
   * The number of items that were replaced as part of this change
   *
   * @generated from field: int32 numReplacedItems = 18;
   */
  numReplacedItems: number;

  /**
   * The number of items that were deleted as part of this change
   *
   * @generated from field: int32 numDeletedItems = 11;
   */
  numDeletedItems: number;

  /**
   * @generated from field: changes.ChangeMetadata.HealthChange UnknownHealthChange = 12;
   */
  UnknownHealthChange?: ChangeMetadata_HealthChange;

  /**
   * @generated from field: changes.ChangeMetadata.HealthChange OkHealthChange = 13;
   */
  OkHealthChange?: ChangeMetadata_HealthChange;

  /**
   * @generated from field: changes.ChangeMetadata.HealthChange WarningHealthChange = 14;
   */
  WarningHealthChange?: ChangeMetadata_HealthChange;

  /**
   * @generated from field: changes.ChangeMetadata.HealthChange ErrorHealthChange = 15;
   */
  ErrorHealthChange?: ChangeMetadata_HealthChange;

  /**
   * @generated from field: changes.ChangeMetadata.HealthChange PendingHealthChange = 16;
   */
  PendingHealthChange?: ChangeMetadata_HealthChange;
};

/**
 * Describes the message changes.ChangeMetadata.
 * Use `create(ChangeMetadataSchema)` to create a new message.
 */
export const ChangeMetadataSchema: GenMessage<ChangeMetadata> = /*@__PURE__*/
  messageDesc(file_changes, 67);

/**
 * Represents the current state of a given health state, and the amount that
 * it has changed. This doesn't just look at the change in total number of
 * items, but also the number of items that have been added and removed, even
 * if they were to add to the same number
 *
 * @generated from message changes.ChangeMetadata.HealthChange
 */
export type ChangeMetadata_HealthChange = Message<"changes.ChangeMetadata.HealthChange"> & {
  /**
   * The number of items that were added to this health state as part of the
   * change
   *
   * @generated from field: int32 added = 1;
   */
  added: number;

  /**
   * The number of items that were removed them this health state as part of
   * the change
   *
   * @generated from field: int32 removed = 2;
   */
  removed: number;

  /**
   * The final number of items that were in this health state
   *
   * @generated from field: int32 finalTotal = 3;
   */
  finalTotal: number;
};

/**
 * Describes the message changes.ChangeMetadata.HealthChange.
 * Use `create(ChangeMetadata_HealthChangeSchema)` to create a new message.
 */
export const ChangeMetadata_HealthChangeSchema: GenMessage<ChangeMetadata_HealthChange> = /*@__PURE__*/
  messageDesc(file_changes, 67, 0);

/**
 * user-supplied properties of this change
 *
 * @generated from message changes.ChangeProperties
 */
export type ChangeProperties = Message<"changes.ChangeProperties"> & {
  /**
   * Short title for this change.
   * Example: "database upgrade"
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Quick description of the change.
   * Example: "upgrade of the database to get access to the new contoso management processor"
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Link to the ticket for this change.
   * Example: "http://jira.contoso-engineering.com/browse/CM-1337"
   *
   * @generated from field: string ticketLink = 4;
   */
  ticketLink: string;

  /**
   * The owner of this change.
   * Example: Susan
   *
   * @generated from field: string owner = 5;
   */
  owner: string;

  /**
   * A comma-separated list of emails to keep updated with the status of this change.
   * Example: susan@contoso.com, jimmy@contoso.com
   *
   * @generated from field: string ccEmails = 6;
   */
  ccEmails: string;

  /**
   * UUID of a bookmark for the item queries of the items *directly* affected by
   * this change. This might be parsed from a terraform plan, added from the API,
   * parsed from a freeform ticket description etc.
   *
   * @generated from field: bytes changingItemsBookmarkUUID = 7;
   */
  changingItemsBookmarkUUID: Uint8Array;

  /**
   * UUID of a snapshot for the item queries of the items *indirectly* affected
   * by this change i.e. the blast radius. The initial selection will be determined
   * automatically based off changingItemsBookmark, but can refined by the user.
   *
   * @generated from field: bytes blastRadiusSnapshotUUID = 11;
   */
  blastRadiusSnapshotUUID: Uint8Array;

  /**
   * UUID of the whole-system snapshot created before the change has started.
   *
   * @generated from field: bytes systemBeforeSnapshotUUID = 8;
   */
  systemBeforeSnapshotUUID: Uint8Array;

  /**
   * UUID of the whole-system snapshot created after the change has finished.
   *
   * @generated from field: bytes systemAfterSnapshotUUID = 9;
   */
  systemAfterSnapshotUUID: Uint8Array;

  /**
   * list of UUIDs for apps affected by this change.
   *
   * @generated from field: repeated bytes affectedAppsUUID = 10;
   */
  affectedAppsUUID: Uint8Array[];

  /**
   * a list of item diffs that were planned to be changed as part of this change. For all items that we could map, the ItemDiff.Reference will be set to the actual item found.
   *
   * @generated from field: repeated changes.ItemDiff plannedChanges = 12;
   */
  plannedChanges: ItemDiff[];

  /**
   * The raw plan output for calculating the change's risks.
   *
   * @generated from field: string rawPlan = 13;
   */
  rawPlan: string;

  /**
   * The code changes of this change for calculating the change's risks.
   *
   * @generated from field: string codeChanges = 14;
   */
  codeChanges: string;

  /**
   * Repo information; can be an empty string. CLI attempts auto-population, but users can override. Not necessarily a URL. The UI will be responsible for any formatting/shortening/sprucing up should it be required.
   *
   * @generated from field: string repo = 15;
   */
  repo: string;

  /**
   * Tags that were set bu the user when the tag was created
   *
   * Deprecated: Use enrichedTags instead
   *
   * @generated from field: map<string, string> tags = 16 [deprecated = true];
   * @deprecated
   */
  tags: { [key: string]: string };

  /**
   * Tags associated with this change
   *
   * @generated from field: map<string, changes.TagValue> enrichedTags = 18;
   */
  enrichedTags: { [key: string]: TagValue };

  /**
   * Tags that were skipped by auto-tagging rules
   *
   * @generated from field: map<string, changes.AutoTagValue> skippedAutoTags = 19;
   */
  skippedAutoTags: { [key: string]: AutoTagValue };

  /**
   * @generated from field: changes.ChangeProperties.AutoTaggingRuleSource autoTaggingRuleSource = 20;
   */
  autoTaggingRuleSource: ChangeProperties_AutoTaggingRuleSource;
};

/**
 * Describes the message changes.ChangeProperties.
 * Use `create(ChangePropertiesSchema)` to create a new message.
 */
export const ChangePropertiesSchema: GenMessage<ChangeProperties> = /*@__PURE__*/
  messageDesc(file_changes, 68);

/**
 * origin of auto-tagging rules
 * this is an enum of file or ui provided rules
 *
 * @generated from enum changes.ChangeProperties.AutoTaggingRuleSource
 */
export enum ChangeProperties_AutoTaggingRuleSource {
  /**
   * @generated from enum value: AUTO_TAGGING_RULE_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTO_TAGGING_RULE_SOURCE_FILE = 1;
   */
  FILE = 1,

  /**
   * @generated from enum value: AUTO_TAGGING_RULE_SOURCE_UI = 2;
   */
  UI = 2,
}

/**
 * Describes the enum changes.ChangeProperties.AutoTaggingRuleSource.
 */
export const ChangeProperties_AutoTaggingRuleSourceSchema: GenEnum<ChangeProperties_AutoTaggingRuleSource> = /*@__PURE__*/
  enumDesc(file_changes, 68, 0);

/**
 * list all changes
 *
 * @generated from message changes.ListChangesRequest
 */
export type ListChangesRequest = Message<"changes.ListChangesRequest"> & {
};

/**
 * Describes the message changes.ListChangesRequest.
 * Use `create(ListChangesRequestSchema)` to create a new message.
 */
export const ListChangesRequestSchema: GenMessage<ListChangesRequest> = /*@__PURE__*/
  messageDesc(file_changes, 69);

/**
 * @generated from message changes.ListChangesResponse
 */
export type ListChangesResponse = Message<"changes.ListChangesResponse"> & {
  /**
   * @generated from field: repeated changes.Change changes = 1;
   */
  changes: Change[];
};

/**
 * Describes the message changes.ListChangesResponse.
 * Use `create(ListChangesResponseSchema)` to create a new message.
 */
export const ListChangesResponseSchema: GenMessage<ListChangesResponse> = /*@__PURE__*/
  messageDesc(file_changes, 70);

/**
 * list all changes in a specific status
 *
 * @generated from message changes.ListChangesByStatusRequest
 */
export type ListChangesByStatusRequest = Message<"changes.ListChangesByStatusRequest"> & {
  /**
   * @generated from field: changes.ChangeStatus status = 1;
   */
  status: ChangeStatus;
};

/**
 * Describes the message changes.ListChangesByStatusRequest.
 * Use `create(ListChangesByStatusRequestSchema)` to create a new message.
 */
export const ListChangesByStatusRequestSchema: GenMessage<ListChangesByStatusRequest> = /*@__PURE__*/
  messageDesc(file_changes, 71);

/**
 * @generated from message changes.ListChangesByStatusResponse
 */
export type ListChangesByStatusResponse = Message<"changes.ListChangesByStatusResponse"> & {
  /**
   * @generated from field: repeated changes.Change changes = 1;
   */
  changes: Change[];
};

/**
 * Describes the message changes.ListChangesByStatusResponse.
 * Use `create(ListChangesByStatusResponseSchema)` to create a new message.
 */
export const ListChangesByStatusResponseSchema: GenMessage<ListChangesByStatusResponse> = /*@__PURE__*/
  messageDesc(file_changes, 72);

/**
 * create a new change
 *
 * @generated from message changes.CreateChangeRequest
 */
export type CreateChangeRequest = Message<"changes.CreateChangeRequest"> & {
  /**
   * @generated from field: changes.ChangeProperties properties = 1;
   */
  properties?: ChangeProperties;
};

/**
 * Describes the message changes.CreateChangeRequest.
 * Use `create(CreateChangeRequestSchema)` to create a new message.
 */
export const CreateChangeRequestSchema: GenMessage<CreateChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 73);

/**
 * @generated from message changes.CreateChangeResponse
 */
export type CreateChangeResponse = Message<"changes.CreateChangeResponse"> & {
  /**
   * @generated from field: changes.Change change = 1;
   */
  change?: Change;
};

/**
 * Describes the message changes.CreateChangeResponse.
 * Use `create(CreateChangeResponseSchema)` to create a new message.
 */
export const CreateChangeResponseSchema: GenMessage<CreateChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 74);

/**
 * get the details of a specific change
 *
 * @generated from message changes.GetChangeRequest
 */
export type GetChangeRequest = Message<"changes.GetChangeRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * Return a slimmed down version of the change. This will exclude the
   * following data:
   * * `rawPlan`: The entire Terraform plan output
   * * `codeChanges`: The code changes that created this change
   *
   * @generated from field: bool slim = 2;
   */
  slim: boolean;
};

/**
 * Describes the message changes.GetChangeRequest.
 * Use `create(GetChangeRequestSchema)` to create a new message.
 */
export const GetChangeRequestSchema: GenMessage<GetChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 75);

/**
 * @generated from message changes.GetChangeResponse
 */
export type GetChangeResponse = Message<"changes.GetChangeResponse"> & {
  /**
   * @generated from field: changes.Change change = 1;
   */
  change?: Change;
};

/**
 * Describes the message changes.GetChangeResponse.
 * Use `create(GetChangeResponseSchema)` to create a new message.
 */
export const GetChangeResponseSchema: GenMessage<GetChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 76);

/**
 * get the details of a specific change
 *
 * @generated from message changes.GetChangeRisksRequest
 */
export type GetChangeRisksRequest = Message<"changes.GetChangeRisksRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.GetChangeRisksRequest.
 * Use `create(GetChangeRisksRequestSchema)` to create a new message.
 */
export const GetChangeRisksRequestSchema: GenMessage<GetChangeRisksRequest> = /*@__PURE__*/
  messageDesc(file_changes, 77);

/**
 * @generated from message changes.ChangeRiskMetadata
 */
export type ChangeRiskMetadata = Message<"changes.ChangeRiskMetadata"> & {
  /**
   * The status of the risk calculation
   *
   * @generated from field: changes.ChangeAnalysisStatus changeAnalysisStatus = 1;
   */
  changeAnalysisStatus?: ChangeAnalysisStatus;

  /**
   * The risks that are related to this change
   *
   * @generated from field: repeated changes.Risk risks = 5;
   */
  risks: Risk[];

  /**
   * The number of low risks in this change
   *
   * @generated from field: int32 numLowRisk = 6;
   */
  numLowRisk: number;

  /**
   * The number of medium risks in this change
   *
   * @generated from field: int32 numMediumRisk = 7;
   */
  numMediumRisk: number;

  /**
   * The number of high risks in this change
   *
   * @generated from field: int32 numHighRisk = 8;
   */
  numHighRisk: number;
};

/**
 * Describes the message changes.ChangeRiskMetadata.
 * Use `create(ChangeRiskMetadataSchema)` to create a new message.
 */
export const ChangeRiskMetadataSchema: GenMessage<ChangeRiskMetadata> = /*@__PURE__*/
  messageDesc(file_changes, 78);

/**
 * @generated from message changes.GetChangeRisksResponse
 */
export type GetChangeRisksResponse = Message<"changes.GetChangeRisksResponse"> & {
  /**
   * @generated from field: changes.ChangeRiskMetadata changeRiskMetadata = 1;
   */
  changeRiskMetadata?: ChangeRiskMetadata;
};

/**
 * Describes the message changes.GetChangeRisksResponse.
 * Use `create(GetChangeRisksResponseSchema)` to create a new message.
 */
export const GetChangeRisksResponseSchema: GenMessage<GetChangeRisksResponse> = /*@__PURE__*/
  messageDesc(file_changes, 79);

/**
 * update an existing change
 *
 * @generated from message changes.UpdateChangeRequest
 */
export type UpdateChangeRequest = Message<"changes.UpdateChangeRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;

  /**
   * @generated from field: changes.ChangeProperties properties = 2;
   */
  properties?: ChangeProperties;
};

/**
 * Describes the message changes.UpdateChangeRequest.
 * Use `create(UpdateChangeRequestSchema)` to create a new message.
 */
export const UpdateChangeRequestSchema: GenMessage<UpdateChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 80);

/**
 * @generated from message changes.UpdateChangeResponse
 */
export type UpdateChangeResponse = Message<"changes.UpdateChangeResponse"> & {
  /**
   * @generated from field: changes.Change change = 1;
   */
  change?: Change;
};

/**
 * Describes the message changes.UpdateChangeResponse.
 * Use `create(UpdateChangeResponseSchema)` to create a new message.
 */
export const UpdateChangeResponseSchema: GenMessage<UpdateChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 81);

/**
 * delete a change
 *
 * @generated from message changes.DeleteChangeRequest
 */
export type DeleteChangeRequest = Message<"changes.DeleteChangeRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.DeleteChangeRequest.
 * Use `create(DeleteChangeRequestSchema)` to create a new message.
 */
export const DeleteChangeRequestSchema: GenMessage<DeleteChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 82);

/**
 * list changes for a snapshot UUID
 *
 * @generated from message changes.ListChangesBySnapshotUUIDRequest
 */
export type ListChangesBySnapshotUUIDRequest = Message<"changes.ListChangesBySnapshotUUIDRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.ListChangesBySnapshotUUIDRequest.
 * Use `create(ListChangesBySnapshotUUIDRequestSchema)` to create a new message.
 */
export const ListChangesBySnapshotUUIDRequestSchema: GenMessage<ListChangesBySnapshotUUIDRequest> = /*@__PURE__*/
  messageDesc(file_changes, 83);

/**
 * @generated from message changes.ListChangesBySnapshotUUIDResponse
 */
export type ListChangesBySnapshotUUIDResponse = Message<"changes.ListChangesBySnapshotUUIDResponse"> & {
  /**
   * @generated from field: repeated changes.Change changes = 1;
   */
  changes: Change[];
};

/**
 * Describes the message changes.ListChangesBySnapshotUUIDResponse.
 * Use `create(ListChangesBySnapshotUUIDResponseSchema)` to create a new message.
 */
export const ListChangesBySnapshotUUIDResponseSchema: GenMessage<ListChangesBySnapshotUUIDResponse> = /*@__PURE__*/
  messageDesc(file_changes, 84);

/**
 * @generated from message changes.DeleteChangeResponse
 */
export type DeleteChangeResponse = Message<"changes.DeleteChangeResponse"> & {
};

/**
 * Describes the message changes.DeleteChangeResponse.
 * Use `create(DeleteChangeResponseSchema)` to create a new message.
 */
export const DeleteChangeResponseSchema: GenMessage<DeleteChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 85);

/**
 * @generated from message changes.RefreshStateRequest
 */
export type RefreshStateRequest = Message<"changes.RefreshStateRequest"> & {
};

/**
 * Describes the message changes.RefreshStateRequest.
 * Use `create(RefreshStateRequestSchema)` to create a new message.
 */
export const RefreshStateRequestSchema: GenMessage<RefreshStateRequest> = /*@__PURE__*/
  messageDesc(file_changes, 86);

/**
 * @generated from message changes.RefreshStateResponse
 */
export type RefreshStateResponse = Message<"changes.RefreshStateResponse"> & {
};

/**
 * Describes the message changes.RefreshStateResponse.
 * Use `create(RefreshStateResponseSchema)` to create a new message.
 */
export const RefreshStateResponseSchema: GenMessage<RefreshStateResponse> = /*@__PURE__*/
  messageDesc(file_changes, 87);

/**
 * @generated from message changes.CalculateBlastRadiusRequest
 */
export type CalculateBlastRadiusRequest = Message<"changes.CalculateBlastRadiusRequest"> & {
  /**
   * ID of the change to calculate the blast radius for.
   *
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;

  /**
   * If true, the blast radius will be calculated again, even if it was already.
   * Otherwise if the blast radius has already been calculated (i.e. the status
   * is `DEFINING` and `blastRadiusBookmarkUUID` is set) an error will be
   * returned.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message changes.CalculateBlastRadiusRequest.
 * Use `create(CalculateBlastRadiusRequestSchema)` to create a new message.
 */
export const CalculateBlastRadiusRequestSchema: GenMessage<CalculateBlastRadiusRequest> = /*@__PURE__*/
  messageDesc(file_changes, 88);

/**
 * @generated from message changes.CalculateBlastRadiusResponse
 */
export type CalculateBlastRadiusResponse = Message<"changes.CalculateBlastRadiusResponse"> & {
  /**
   * @generated from field: changes.CalculateBlastRadiusResponse.State state = 1;
   */
  state: CalculateBlastRadiusResponse_State;

  /**
   * @generated from field: uint32 numItems = 2;
   */
  numItems: number;

  /**
   * @generated from field: uint32 numEdges = 3;
   */
  numEdges: number;

  /**
   * A list of errors that were encountered as part of calculating the blast
   * radius. These should only be populated if the state is `STATE_DONE` to
   * avoid sending them repeatedly
   *
   * @generated from field: repeated string errors = 4;
   */
  errors: string[];
};

/**
 * Describes the message changes.CalculateBlastRadiusResponse.
 * Use `create(CalculateBlastRadiusResponseSchema)` to create a new message.
 */
export const CalculateBlastRadiusResponseSchema: GenMessage<CalculateBlastRadiusResponse> = /*@__PURE__*/
  messageDesc(file_changes, 89);

/**
 * @generated from enum changes.CalculateBlastRadiusResponse.State
 */
export enum CalculateBlastRadiusResponse_State {
  /**
   * No state has been specified
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The blast radius is being calculated.
   *
   * @generated from enum value: STATE_DISCOVERING = 1;
   */
  DISCOVERING = 1,

  /**
   * The blast radius has been calculated and is being saved
   *
   * @generated from enum value: STATE_SAVING = 2;
   */
  SAVING = 2,

  /**
   * Determining which apps are within the blast radius
   *
   * @generated from enum value: STATE_FINDING_APPS = 3;
   */
  FINDING_APPS = 3,

  /**
   * Everything is complete
   *
   * @generated from enum value: STATE_DONE = 4;
   */
  DONE = 4,
}

/**
 * Describes the enum changes.CalculateBlastRadiusResponse.State.
 */
export const CalculateBlastRadiusResponse_StateSchema: GenEnum<CalculateBlastRadiusResponse_State> = /*@__PURE__*/
  enumDesc(file_changes, 89, 0);

/**
 * @generated from message changes.StartChangeRequest
 */
export type StartChangeRequest = Message<"changes.StartChangeRequest"> & {
  /**
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.StartChangeRequest.
 * Use `create(StartChangeRequestSchema)` to create a new message.
 */
export const StartChangeRequestSchema: GenMessage<StartChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 90);

/**
 * @generated from message changes.StartChangeResponse
 */
export type StartChangeResponse = Message<"changes.StartChangeResponse"> & {
  /**
   * @generated from field: changes.StartChangeResponse.State state = 1;
   */
  state: StartChangeResponse_State;

  /**
   * @generated from field: uint32 numItems = 2;
   */
  numItems: number;

  /**
   * @generated from field: uint32 NumEdges = 3;
   */
  NumEdges: number;
};

/**
 * Describes the message changes.StartChangeResponse.
 * Use `create(StartChangeResponseSchema)` to create a new message.
 */
export const StartChangeResponseSchema: GenMessage<StartChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 91);

/**
 * @generated from enum changes.StartChangeResponse.State
 */
export enum StartChangeResponse_State {
  /**
   * No state has been specified
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Snapshot is being taken
   *
   * @generated from enum value: STATE_TAKING_SNAPSHOT = 1;
   */
  TAKING_SNAPSHOT = 1,

  /**
   * Snapshot is being saved
   *
   * @generated from enum value: STATE_SAVING_SNAPSHOT = 2;
   */
  SAVING_SNAPSHOT = 2,

  /**
   * Everything is complete
   *
   * @generated from enum value: STATE_DONE = 3;
   */
  DONE = 3,
}

/**
 * Describes the enum changes.StartChangeResponse.State.
 */
export const StartChangeResponse_StateSchema: GenEnum<StartChangeResponse_State> = /*@__PURE__*/
  enumDesc(file_changes, 91, 0);

/**
 * @generated from message changes.EndChangeRequest
 */
export type EndChangeRequest = Message<"changes.EndChangeRequest"> & {
  /**
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.EndChangeRequest.
 * Use `create(EndChangeRequestSchema)` to create a new message.
 */
export const EndChangeRequestSchema: GenMessage<EndChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 92);

/**
 * @generated from message changes.EndChangeResponse
 */
export type EndChangeResponse = Message<"changes.EndChangeResponse"> & {
  /**
   * @generated from field: changes.EndChangeResponse.State state = 1;
   */
  state: EndChangeResponse_State;

  /**
   * @generated from field: uint32 numItems = 2;
   */
  numItems: number;

  /**
   * @generated from field: uint32 NumEdges = 3;
   */
  NumEdges: number;
};

/**
 * Describes the message changes.EndChangeResponse.
 * Use `create(EndChangeResponseSchema)` to create a new message.
 */
export const EndChangeResponseSchema: GenMessage<EndChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 93);

/**
 * @generated from enum changes.EndChangeResponse.State
 */
export enum EndChangeResponse_State {
  /**
   * No state has been specified
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Snapshot is being taken
   *
   * @generated from enum value: STATE_TAKING_SNAPSHOT = 1;
   */
  TAKING_SNAPSHOT = 1,

  /**
   * Snapshot is being saved
   *
   * @generated from enum value: STATE_SAVING_SNAPSHOT = 2;
   */
  SAVING_SNAPSHOT = 2,

  /**
   * Everything is complete
   *
   * @generated from enum value: STATE_DONE = 3;
   */
  DONE = 3,
}

/**
 * Describes the enum changes.EndChangeResponse.State.
 */
export const EndChangeResponse_StateSchema: GenEnum<EndChangeResponse_State> = /*@__PURE__*/
  enumDesc(file_changes, 93, 0);

/**
 * complete Onboarding information with machine-supplied and user-supplied values
 *
 * @generated from message changes.Onboarding
 */
export type Onboarding = Message<"changes.Onboarding"> & {
  /**
   * machine-generated metadata of this onboarding info
   *
   * @generated from field: changes.OnboardingMetadata metadata = 1;
   */
  metadata?: OnboardingMetadata;

  /**
   * user-supplied properties of this onboarding info
   *
   * @generated from field: changes.OnboardingProperties properties = 2;
   */
  properties?: OnboardingProperties;
};

/**
 * Describes the message changes.Onboarding.
 * Use `create(OnboardingSchema)` to create a new message.
 */
export const OnboardingSchema: GenMessage<Onboarding> = /*@__PURE__*/
  messageDesc(file_changes, 94);

/**
 * machine-generated metadata of this onboarding info
 *
 * @generated from message changes.OnboardingMetadata
 */
export type OnboardingMetadata = Message<"changes.OnboardingMetadata"> & {
  /**
   * timestamp when this onboarding info was created
   *
   * @generated from field: google.protobuf.Timestamp created = 2;
   */
  created?: Timestamp;

  /**
   * whether or not the user already has an AWS source configured
   *
   * @generated from field: bool hasAwsSource = 3;
   */
  hasAwsSource: boolean;
};

/**
 * Describes the message changes.OnboardingMetadata.
 * Use `create(OnboardingMetadataSchema)` to create a new message.
 */
export const OnboardingMetadataSchema: GenMessage<OnboardingMetadata> = /*@__PURE__*/
  messageDesc(file_changes, 95);

/**
 * user-supplied properties of this onboarding info
 *
 * @generated from message changes.OnboardingProperties
 */
export type OnboardingProperties = Message<"changes.OnboardingProperties"> & {
  /**
   * The current status of this onboarding info.
   *
   * @generated from field: changes.OnboardingStatus status = 1;
   */
  status: OnboardingStatus;

  /**
   * The UUID for the aws-source that was configured as part of onboarding
   *
   * @generated from field: bytes awsSourceUUID = 2;
   */
  awsSourceUUID: Uint8Array;

  /**
   * The UUID of the app that was created as part of onboarding
   *
   * @generated from field: bytes appUUID = 3;
   */
  appUUID: Uint8Array;

  /**
   * The UUID of the change that was created as part of onboarding
   *
   * @generated from field: bytes changeUUID = 4;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.OnboardingProperties.
 * Use `create(OnboardingPropertiesSchema)` to create a new message.
 */
export const OnboardingPropertiesSchema: GenMessage<OnboardingProperties> = /*@__PURE__*/
  messageDesc(file_changes, 96);

/**
 * get the onboarding status
 *
 * @generated from message changes.GetOnboardingRequest
 */
export type GetOnboardingRequest = Message<"changes.GetOnboardingRequest"> & {
};

/**
 * Describes the message changes.GetOnboardingRequest.
 * Use `create(GetOnboardingRequestSchema)` to create a new message.
 */
export const GetOnboardingRequestSchema: GenMessage<GetOnboardingRequest> = /*@__PURE__*/
  messageDesc(file_changes, 97);

/**
 * @generated from message changes.GetOnboardingResponse
 */
export type GetOnboardingResponse = Message<"changes.GetOnboardingResponse"> & {
  /**
   * @generated from field: changes.Onboarding onboarding = 1;
   */
  onboarding?: Onboarding;
};

/**
 * Describes the message changes.GetOnboardingResponse.
 * Use `create(GetOnboardingResponseSchema)` to create a new message.
 */
export const GetOnboardingResponseSchema: GenMessage<GetOnboardingResponse> = /*@__PURE__*/
  messageDesc(file_changes, 98);

/**
 * update onboarding status
 *
 * @generated from message changes.UpdateOnboardingRequest
 */
export type UpdateOnboardingRequest = Message<"changes.UpdateOnboardingRequest"> & {
  /**
   * @generated from field: changes.OnboardingProperties properties = 2;
   */
  properties?: OnboardingProperties;
};

/**
 * Describes the message changes.UpdateOnboardingRequest.
 * Use `create(UpdateOnboardingRequestSchema)` to create a new message.
 */
export const UpdateOnboardingRequestSchema: GenMessage<UpdateOnboardingRequest> = /*@__PURE__*/
  messageDesc(file_changes, 99);

/**
 * @generated from message changes.UpdateOnboardingResponse
 */
export type UpdateOnboardingResponse = Message<"changes.UpdateOnboardingResponse"> & {
  /**
   * @generated from field: changes.Onboarding onboarding = 1;
   */
  onboarding?: Onboarding;
};

/**
 * Describes the message changes.UpdateOnboardingResponse.
 * Use `create(UpdateOnboardingResponseSchema)` to create a new message.
 */
export const UpdateOnboardingResponseSchema: GenMessage<UpdateOnboardingResponse> = /*@__PURE__*/
  messageDesc(file_changes, 100);

/**
 * @generated from message changes.SimulateChangeRequest
 */
export type SimulateChangeRequest = Message<"changes.SimulateChangeRequest"> & {
  /**
   * The ID of the change to simulate
   *
   * @generated from field: bytes changeUUID = 1;
   */
  changeUUID: Uint8Array;
};

/**
 * Describes the message changes.SimulateChangeRequest.
 * Use `create(SimulateChangeRequestSchema)` to create a new message.
 */
export const SimulateChangeRequestSchema: GenMessage<SimulateChangeRequest> = /*@__PURE__*/
  messageDesc(file_changes, 101);

/**
 * @generated from message changes.SimulateChangeResponse
 */
export type SimulateChangeResponse = Message<"changes.SimulateChangeResponse"> & {
  /**
   * Whether the simulation is complete
   *
   * @generated from field: bool done = 1;
   */
  done: boolean;

  /**
   * How far through the simulation process we are. This will be pretty
   * approximate as it's not expected to take very long and is more to give the
   * sense of progress than to be an accurate measure
   *
   * @generated from field: uint32 percentComplete = 2;
   */
  percentComplete: number;
};

/**
 * Describes the message changes.SimulateChangeResponse.
 * Use `create(SimulateChangeResponseSchema)` to create a new message.
 */
export const SimulateChangeResponseSchema: GenMessage<SimulateChangeResponse> = /*@__PURE__*/
  messageDesc(file_changes, 102);

/**
 * @generated from message changes.Risk
 */
export type Risk = Message<"changes.Risk"> & {
  /**
   * @generated from field: bytes UUID = 5;
   */
  UUID: Uint8Array;

  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: changes.Risk.Severity severity = 2;
   */
  severity: Risk_Severity;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: repeated Reference relatedItems = 4;
   */
  relatedItems: Reference[];
};

/**
 * Describes the message changes.Risk.
 * Use `create(RiskSchema)` to create a new message.
 */
export const RiskSchema: GenMessage<Risk> = /*@__PURE__*/
  messageDesc(file_changes, 103);

/**
 * @generated from enum changes.Risk.Severity
 */
export enum Risk_Severity {
  /**
   * @generated from enum value: SEVERITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SEVERITY_LOW = 1;
   */
  LOW = 1,

  /**
   * @generated from enum value: SEVERITY_MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * @generated from enum value: SEVERITY_HIGH = 3;
   */
  HIGH = 3,
}

/**
 * Describes the enum changes.Risk.Severity.
 */
export const Risk_SeveritySchema: GenEnum<Risk_Severity> = /*@__PURE__*/
  enumDesc(file_changes, 103, 0);

/**
 * @generated from message changes.ChangeAnalysisStatus
 */
export type ChangeAnalysisStatus = Message<"changes.ChangeAnalysisStatus"> & {
  /**
   * @generated from field: changes.ChangeAnalysisStatus.Status status = 1;
   */
  status: ChangeAnalysisStatus_Status;

  /**
   * Milestones within the risk calculation process. They will be populated when
   * the status is `STATUS_INPROGRESS` and show a more detailed breakdown of the
   * progress
   *
   * @generated from field: repeated changes.ChangeAnalysisStatus.ProgressMilestone progressMilestones = 5;
   */
  progressMilestones: ChangeAnalysisStatus_ProgressMilestone[];
};

/**
 * Describes the message changes.ChangeAnalysisStatus.
 * Use `create(ChangeAnalysisStatusSchema)` to create a new message.
 */
export const ChangeAnalysisStatusSchema: GenMessage<ChangeAnalysisStatus> = /*@__PURE__*/
  messageDesc(file_changes, 104);

/**
 * @generated from message changes.ChangeAnalysisStatus.ProgressMilestone
 */
export type ChangeAnalysisStatus_ProgressMilestone = Message<"changes.ChangeAnalysisStatus.ProgressMilestone"> & {
  /**
   * The description of this milestone
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * The status of this milestone
   *
   * @generated from field: changes.ChangeAnalysisStatus.ProgressMilestone.Status status = 2;
   */
  status: ChangeAnalysisStatus_ProgressMilestone_Status;
};

/**
 * Describes the message changes.ChangeAnalysisStatus.ProgressMilestone.
 * Use `create(ChangeAnalysisStatus_ProgressMilestoneSchema)` to create a new message.
 */
export const ChangeAnalysisStatus_ProgressMilestoneSchema: GenMessage<ChangeAnalysisStatus_ProgressMilestone> = /*@__PURE__*/
  messageDesc(file_changes, 104, 0);

/**
 * @generated from enum changes.ChangeAnalysisStatus.ProgressMilestone.Status
 */
export enum ChangeAnalysisStatus_ProgressMilestone_Status {
  /**
   * The milestone hasn't been reached yet
   *
   * @generated from enum value: STATUS_PENDING = 0;
   */
  PENDING = 0,

  /**
   * The milestone is currently being worked on
   *
   * @generated from enum value: STATUS_INPROGRESS = 1;
   */
  INPROGRESS = 1,

  /**
   * The milestone has been completed
   *
   * @generated from enum value: STATUS_DONE = 2;
   */
  DONE = 2,

  /**
   * The milestone failed
   *
   * @generated from enum value: STATUS_ERROR = 3;
   */
  ERROR = 3,

  /**
   * The milestone was skipped. This will happen to future milestones if
   * there is an error. For example an error at step 1 will mean the others
   * were skipped
   *
   * @generated from enum value: STATUS_SKIPPED = 4;
   */
  SKIPPED = 4,
}

/**
 * Describes the enum changes.ChangeAnalysisStatus.ProgressMilestone.Status.
 */
export const ChangeAnalysisStatus_ProgressMilestone_StatusSchema: GenEnum<ChangeAnalysisStatus_ProgressMilestone_Status> = /*@__PURE__*/
  enumDesc(file_changes, 104, 0, 0);

/**
 * @generated from enum changes.ChangeAnalysisStatus.Status
 */
export enum ChangeAnalysisStatus_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_INPROGRESS = 1;
   */
  INPROGRESS = 1,

  /**
   * @generated from enum value: STATUS_SKIPPED = 2;
   */
  SKIPPED = 2,

  /**
   * @generated from enum value: STATUS_DONE = 3;
   */
  DONE = 3,

  /**
   * @generated from enum value: STATUS_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum changes.ChangeAnalysisStatus.Status.
 */
export const ChangeAnalysisStatus_StatusSchema: GenEnum<ChangeAnalysisStatus_Status> = /*@__PURE__*/
  enumDesc(file_changes, 104, 0);

/**
 * @generated from message changes.ChangeArchive
 */
export type ChangeArchive = Message<"changes.ChangeArchive"> & {
  /**
   * @generated from field: changes.Change Change = 1;
   */
  Change?: Change;

  /**
   * @generated from field: optional bookmarks.Bookmark changingItemsBookmark = 2;
   */
  changingItemsBookmark?: Bookmark;

  /**
   * @generated from field: optional snapshots.Snapshot blastRadiusSnapshot = 3;
   */
  blastRadiusSnapshot?: Snapshot;

  /**
   * @generated from field: optional snapshots.Snapshot systemBeforeSnapshot = 4;
   */
  systemBeforeSnapshot?: Snapshot;

  /**
   * @generated from field: optional snapshots.Snapshot systemAfterSnapshot = 5;
   */
  systemAfterSnapshot?: Snapshot;

  /**
   * @generated from field: repeated changes.App affectedApps = 6;
   */
  affectedApps: App[];

  /**
   * @generated from field: repeated changes.ChangeTimelineEntry timeline = 7;
   */
  timeline: ChangeTimelineEntry[];

  /**
   * @generated from field: changes.ChangeRiskMetadata changeRiskMetadata = 8;
   */
  changeRiskMetadata?: ChangeRiskMetadata;
};

/**
 * Describes the message changes.ChangeArchive.
 * Use `create(ChangeArchiveSchema)` to create a new message.
 */
export const ChangeArchiveSchema: GenMessage<ChangeArchive> = /*@__PURE__*/
  messageDesc(file_changes, 105);

/**
 * @generated from message changes.GetChangeArchiveRequest
 */
export type GetChangeArchiveRequest = Message<"changes.GetChangeArchiveRequest"> & {
  /**
   * @generated from field: bytes UUID = 1;
   */
  UUID: Uint8Array;
};

/**
 * Describes the message changes.GetChangeArchiveRequest.
 * Use `create(GetChangeArchiveRequestSchema)` to create a new message.
 */
export const GetChangeArchiveRequestSchema: GenMessage<GetChangeArchiveRequest> = /*@__PURE__*/
  messageDesc(file_changes, 106);

/**
 * @generated from message changes.GetChangeArchiveResponse
 */
export type GetChangeArchiveResponse = Message<"changes.GetChangeArchiveResponse"> & {
  /**
   * @generated from field: changes.ChangeArchive changeArchive = 1;
   */
  changeArchive?: ChangeArchive;
};

/**
 * Describes the message changes.GetChangeArchiveResponse.
 * Use `create(GetChangeArchiveResponseSchema)` to create a new message.
 */
export const GetChangeArchiveResponseSchema: GenMessage<GetChangeArchiveResponse> = /*@__PURE__*/
  messageDesc(file_changes, 107);

/**
 * @generated from enum changes.ItemDiffStatus
 */
export enum ItemDiffStatus {
  /**
   * @generated from enum value: ITEM_DIFF_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ITEM_DIFF_STATUS_UNCHANGED = 1;
   */
  UNCHANGED = 1,

  /**
   * @generated from enum value: ITEM_DIFF_STATUS_CREATED = 2;
   */
  CREATED = 2,

  /**
   * @generated from enum value: ITEM_DIFF_STATUS_UPDATED = 3;
   */
  UPDATED = 3,

  /**
   * @generated from enum value: ITEM_DIFF_STATUS_DELETED = 4;
   */
  DELETED = 4,

  /**
   * @generated from enum value: ITEM_DIFF_STATUS_REPLACED = 5;
   */
  REPLACED = 5,
}

/**
 * Describes the enum changes.ItemDiffStatus.
 */
export const ItemDiffStatusSchema: GenEnum<ItemDiffStatus> = /*@__PURE__*/
  enumDesc(file_changes, 0);

/**
 * @generated from enum changes.ChangeStatus
 */
export enum ChangeStatus {
  /**
   * The change has been created, but the blast radius has not yet been
   * calculated. The blast radius can be calculated using the
   * `CalculateBlastRadius` RPC.
   *
   * @generated from enum value: CHANGE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The blast radius has been calculated, but the change has not yet started.
   * The change can be started using the `StartChange` RPC.
   *
   * @generated from enum value: CHANGE_STATUS_DEFINING = 1;
   */
  DEFINING = 1,

  /**
   * The change is in progress. The change can be ended using the `EndChange`
   * RPC.
   *
   * @generated from enum value: CHANGE_STATUS_HAPPENING = 2;
   */
  HAPPENING = 2,

  /**
   * The change has been ended, but the results have not yet been processed.
   *
   * @generated from enum value: CHANGE_STATUS_PROCESSING = 3;
   */
  PROCESSING = 3,

  /**
   * The change has been ended and the results have been processed.
   *
   * @generated from enum value: CHANGE_STATUS_DONE = 4;
   */
  DONE = 4,
}

/**
 * Describes the enum changes.ChangeStatus.
 */
export const ChangeStatusSchema: GenEnum<ChangeStatus> = /*@__PURE__*/
  enumDesc(file_changes, 1);

/**
 * @generated from enum changes.OnboardingStatus
 */
export enum OnboardingStatus {
  /**
   * @generated from enum value: ONBOARDING_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ONBOARDING_STATUS_ADD_AWS_ACCOUNT = 1;
   */
  ADD_AWS_ACCOUNT = 1,

  /**
   * @generated from enum value: ONBOARDING_STATUS_ADD_APP = 2;
   */
  ADD_APP = 2,

  /**
   * @generated from enum value: ONBOARDING_STATUS_CREATE_CHANGE = 3;
   */
  CREATE_CHANGE = 3,

  /**
   * @generated from enum value: ONBOARDING_STATUS_SIMULATE_CHANGE = 4;
   */
  SIMULATE_CHANGE = 4,

  /**
   * @generated from enum value: ONBOARDING_STATUS_DONE = 5;
   */
  DONE = 5,
}

/**
 * Describes the enum changes.OnboardingStatus.
 */
export const OnboardingStatusSchema: GenEnum<OnboardingStatus> = /*@__PURE__*/
  enumDesc(file_changes, 2);

/**
 * All the request/reply APIs for the Change/App iteration
 *
 * @generated from service changes.ChangesService
 */
export const ChangesService: GenService<{
  /**
   * Lists all apps
   *
   * @generated from rpc changes.ChangesService.ListApps
   */
  listApps: {
    methodKind: "unary";
    input: typeof ListAppsRequestSchema;
    output: typeof ListAppsResponseSchema;
  },
  /**
   * Creates a new app
   *
   * @generated from rpc changes.ChangesService.CreateApp
   */
  createApp: {
    methodKind: "unary";
    input: typeof CreateAppRequestSchema;
    output: typeof CreateAppResponseSchema;
  },
  /**
   * Creates an app using just a URL as input. This automatically creates and
   * sets the bookmark UUID, along with the url for display in the GUI
   *
   * @generated from rpc changes.ChangesService.CreateSimpleApp
   */
  createSimpleApp: {
    methodKind: "unary";
    input: typeof CreateSimpleAppRequestSchema;
    output: typeof CreateSimpleAppResponseSchema;
  },
  /**
   * Gets the details of an existing app
   *
   * @generated from rpc changes.ChangesService.GetApp
   */
  getApp: {
    methodKind: "unary";
    input: typeof GetAppRequestSchema;
    output: typeof GetAppResponseSchema;
  },
  /**
   * Updates an existing app
   *
   * @generated from rpc changes.ChangesService.UpdateApp
   */
  updateApp: {
    methodKind: "unary";
    input: typeof UpdateAppRequestSchema;
    output: typeof UpdateAppResponseSchema;
  },
  /**
   * Deletes an app
   *
   * @generated from rpc changes.ChangesService.DeleteApp
   */
  deleteApp: {
    methodKind: "unary";
    input: typeof DeleteAppRequestSchema;
    output: typeof DeleteAppResponseSchema;
  },
  /**
   * Lists all changes
   *
   * @generated from rpc changes.ChangesService.ListChanges
   */
  listChanges: {
    methodKind: "unary";
    input: typeof ListChangesRequestSchema;
    output: typeof ListChangesResponseSchema;
  },
  /**
   * list all changes in a specific status
   *
   * @generated from rpc changes.ChangesService.ListChangesByStatus
   */
  listChangesByStatus: {
    methodKind: "unary";
    input: typeof ListChangesByStatusRequestSchema;
    output: typeof ListChangesByStatusResponseSchema;
  },
  /**
   * Creates a new change
   *
   * @generated from rpc changes.ChangesService.CreateChange
   */
  createChange: {
    methodKind: "unary";
    input: typeof CreateChangeRequestSchema;
    output: typeof CreateChangeResponseSchema;
  },
  /**
   * Gets the details of an existing change
   *
   * @generated from rpc changes.ChangesService.GetChange
   */
  getChange: {
    methodKind: "unary";
    input: typeof GetChangeRequestSchema;
    output: typeof GetChangeResponseSchema;
  },
  /**
   * Gets the risks and risk calculation status of an existing change
   *
   * @generated from rpc changes.ChangesService.GetChangeRisks
   */
  getChangeRisks: {
    methodKind: "unary";
    input: typeof GetChangeRisksRequestSchema;
    output: typeof GetChangeRisksResponseSchema;
  },
  /**
   * Gets the all data of an existing change for archival
   *
   * @generated from rpc changes.ChangesService.GetChangeArchive
   */
  getChangeArchive: {
    methodKind: "unary";
    input: typeof GetChangeArchiveRequestSchema;
    output: typeof GetChangeArchiveResponseSchema;
  },
  /**
   * Updates an existing change
   *
   * @generated from rpc changes.ChangesService.UpdateChange
   */
  updateChange: {
    methodKind: "unary";
    input: typeof UpdateChangeRequestSchema;
    output: typeof UpdateChangeResponseSchema;
  },
  /**
   * Deletes a change
   *
   * @generated from rpc changes.ChangesService.DeleteChange
   */
  deleteChange: {
    methodKind: "unary";
    input: typeof DeleteChangeRequestSchema;
    output: typeof DeleteChangeResponseSchema;
  },
  /**
   * Lists all changes for a snapshot UUID
   *
   * @generated from rpc changes.ChangesService.ListChangesBySnapshotUUID
   */
  listChangesBySnapshotUUID: {
    methodKind: "unary";
    input: typeof ListChangesBySnapshotUUIDRequestSchema;
    output: typeof ListChangesBySnapshotUUIDResponseSchema;
  },
  /**
   * Get the timeline of changes for a given change
   *
   * @generated from rpc changes.ChangesService.GetChangeTimeline
   */
  getChangeTimeline: {
    methodKind: "unary";
    input: typeof GetChangeTimelineRequestSchema;
    output: typeof GetChangeTimelineResponseSchema;
  },
  /**
   * Ask the gateway to refresh all internal caches and status slots
   * The RPC will return immediately doing all processing in the background
   *
   * @generated from rpc changes.ChangesService.RefreshState
   */
  refreshState: {
    methodKind: "unary";
    input: typeof RefreshStateRequestSchema;
    output: typeof RefreshStateResponseSchema;
  },
  /**
   * Calculates the blast radius of a change using the
   * `changingItemsBookmarkUUID` as the starting point. If the
   * `changingItemsBookmarkUUID` is blank, this will return an error.
   * Returns a stream of status updates. The response stream closes when all calculating has been done.
   * Executing this RPC will move the Change to the `STATUS_DEFINING` state or return an error.
   *
   * @generated from rpc changes.ChangesService.CalculateBlastRadius
   */
  calculateBlastRadius: {
    methodKind: "server_streaming";
    input: typeof CalculateBlastRadiusRequestSchema;
    output: typeof CalculateBlastRadiusResponseSchema;
  },
  /**
   * Executing this RPC take a snapshot of the current blast radius and store it
   * in `systemBeforeSnapshotUUID` and then advance the status to
   * `STATUS_HAPPENING`. It can only be called once per change.
   *
   * @generated from rpc changes.ChangesService.StartChange
   */
  startChange: {
    methodKind: "server_streaming";
    input: typeof StartChangeRequestSchema;
    output: typeof StartChangeResponseSchema;
  },
  /**
   * Takes the "after" snapshot, stores it in `systemAfterSnapshotUUID`, calculates
   * the change diff and stores it as a list of DiffedItems and
   * advances the change status to `STATUS_DONE`
   *
   * @generated from rpc changes.ChangesService.EndChange
   */
  endChange: {
    methodKind: "server_streaming";
    input: typeof EndChangeRequestSchema;
    output: typeof EndChangeResponseSchema;
  },
  /**
   * Simulates a change without the user actually having to do anything. The
   * change specified in the request should be in the `STATUS_DEFINING` state.
   * It will be moved to the `STATUS_DONE` state after the simulation is
   * complete.
   *
   * @generated from rpc changes.ChangesService.SimulateChange
   */
  simulateChange: {
    methodKind: "server_streaming";
    input: typeof SimulateChangeRequestSchema;
    output: typeof SimulateChangeResponseSchema;
  },
  /**
   * @generated from rpc changes.ChangesService.GetOnboarding
   */
  getOnboarding: {
    methodKind: "unary";
    input: typeof GetOnboardingRequestSchema;
    output: typeof GetOnboardingResponseSchema;
  },
  /**
   * @generated from rpc changes.ChangesService.UpdateOnboarding
   */
  updateOnboarding: {
    methodKind: "unary";
    input: typeof UpdateOnboardingRequestSchema;
    output: typeof UpdateOnboardingResponseSchema;
  },
  /**
   * Lists all apps, designed for use in the apps home page
   *
   * @generated from rpc changes.ChangesService.ListHomeApps
   */
  listHomeApps: {
    methodKind: "unary";
    input: typeof ListHomeAppsRequestSchema;
    output: typeof ListHomeAppsResponseSchema;
  },
  /**
   * Lists all changes, designed for use in the changes home page
   *
   * @generated from rpc changes.ChangesService.ListHomeChanges
   */
  listHomeChanges: {
    methodKind: "unary";
    input: typeof ListHomeChangesRequestSchema;
    output: typeof ListHomeChangesResponseSchema;
  },
  /**
   * Gets a summary of an app, used when a user clicks on a given app
   *
   * @generated from rpc changes.ChangesService.GetAppSummary
   */
  getAppSummary: {
    methodKind: "unary";
    input: typeof GetAppSummaryRequestSchema;
    output: typeof GetAppSummaryResponseSchema;
  },
  /**
   * Gets a summaries of a list of apps
   *
   * @generated from rpc changes.ChangesService.GetAppSummaries
   */
  getAppSummaries: {
    methodKind: "unary";
    input: typeof GetAppSummariesRequestSchema;
    output: typeof GetAppSummariesResponseSchema;
  },
  /**
   * Lists all changes affecting an app
   *
   * @generated from rpc changes.ChangesService.ListAppChanges
   */
  listAppChanges: {
    methodKind: "unary";
    input: typeof ListAppChangesRequestSchema;
    output: typeof ListAppChangesResponseSchema;
  },
  /**
   * Lists all changes affecting an app, returning only a summary of each change
   * rather than the full details
   *
   * @generated from rpc changes.ChangesService.ListAppChangesSummary
   */
  listAppChangesSummary: {
    methodKind: "unary";
    input: typeof ListAppChangesSummaryRequestSchema;
    output: typeof ListAppChangesSummaryResponseSchema;
  },
  /**
   * This sets the items that are changing in a given change, and updates the
   * blast radius. In the backend this will convert the references to GET
   * requests, save them to a bookmark, and set this as the
   * changingItemsBookmarkUUID in the change itself before triggering a blast
   * radius calculation
   *
   * @generated from rpc changes.ChangesService.UpdateChangingItems
   */
  updateChangingItems: {
    methodKind: "server_streaming";
    input: typeof UpdateChangingItemsRequestSchema;
    output: typeof CalculateBlastRadiusResponseSchema;
  },
  /**
   * This sets the item diffs that are changing in a given change, and updates
   * the blast radius. In the backend this will save the item diffs for later
   * display and use the item's references to fabricate a bookmark, and set this
   * as changingItemsBookmarkUUID in the change itself before triggering a blast
   * radius calculation. Note that not all of the changing items have to exist
   * in our current sources.
   *
   * @generated from rpc changes.ChangesService.UpdatePlannedChanges
   */
  updatePlannedChanges: {
    methodKind: "server_streaming";
    input: typeof UpdatePlannedChangesRequestSchema;
    output: typeof CalculateBlastRadiusResponseSchema;
  },
  /**
   * Returns a list of apps that are affected by this change. This is calculated
   * by looking at the blast radius snapshot and finding all apps that have
   * items in the snapshot.
   *
   * @generated from rpc changes.ChangesService.GetAffectedApps
   */
  getAffectedApps: {
    methodKind: "unary";
    input: typeof GetAffectedAppsRequestSchema;
    output: typeof GetAffectedAppsResponseSchema;
  },
  /**
   * Gets the diff summary for all items that were planned to change as part of
   * this change. This includes the high level details of the item, and the
   * status (e.g. changed, deleted) but not the diff itself
   *
   * @generated from rpc changes.ChangesService.ListChangingItemsSummary
   */
  listChangingItemsSummary: {
    methodKind: "unary";
    input: typeof ListChangingItemsSummaryRequestSchema;
    output: typeof ListChangingItemsSummaryResponseSchema;
  },
  /**
   * Gets the full diff of everything that changed as part of this "change".
   * This includes all items and also edges between them
   *
   * @generated from rpc changes.ChangesService.GetDiff
   */
  getDiff: {
    methodKind: "unary";
    input: typeof GetDiffRequestSchema;
    output: typeof GetDiffResponseSchema;
  },
  /**
   * List all the available repos, authors and statuses that can be used to populate the dropdown filters
   *
   * @generated from rpc changes.ChangesService.PopulateChangeFilters
   */
  populateChangeFilters: {
    methodKind: "unary";
    input: typeof PopulateChangeFiltersRequestSchema;
    output: typeof PopulateChangeFiltersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_changes, 0);

/**
 * @generated from service changes.AutoTaggingService
 */
export const AutoTaggingService: GenService<{
  /**
   * Used on the auto-tagging page to list all rules for an account
   * Returns a list of rules
   *
   * @generated from rpc changes.AutoTaggingService.ListRules
   */
  listRules: {
    methodKind: "unary";
    input: typeof ListRulesRequestSchema;
    output: typeof ListRulesResponseSchema;
  },
  /**
   * Creates a new rule, with the provided properties. This will return a
   * CodeAlreadyExists error if the `tagKey` is not unique
   *
   * @generated from rpc changes.AutoTaggingService.CreateRule
   */
  createRule: {
    methodKind: "unary";
    input: typeof CreateRuleRequestSchema;
    output: typeof CreateRuleResponseSchema;
  },
  /**
   * Get the details of a rule
   *
   * @generated from rpc changes.AutoTaggingService.GetRule
   */
  getRule: {
    methodKind: "unary";
    input: typeof GetRuleRequestSchema;
    output: typeof GetRuleResponseSchema;
  },
  /**
   * Given a rule UUID, updates the rule properties. Note the key can be
   * updated, but it only applies to new changes. This will return a
   * CodeAlreadyExists error if the  new `tagKey` is not unique
   *
   * @generated from rpc changes.AutoTaggingService.UpdateRule
   */
  updateRule: {
    methodKind: "unary";
    input: typeof UpdateRuleRequestSchema;
    output: typeof UpdateRuleResponseSchema;
  },
  /**
   * Given a rule UUID permanently delete that rule, existing changes will not
   * be affected
   *
   * @generated from rpc changes.AutoTaggingService.DeleteRule
   */
  deleteRule: {
    methodKind: "unary";
    input: typeof DeleteRuleRequestSchema;
    output: typeof DeleteRuleResponseSchema;
  },
  /**
   * Convert a rule's properties to a string that can be used in the rules
   * config file
   *
   * @generated from rpc changes.AutoTaggingService.ExportRule
   */
  exportRule: {
    methodKind: "unary";
    input: typeof ExportRuleRequestSchema;
    output: typeof ExportRuleResponseSchema;
  },
  /**
   * Given a rule, and a list of changes uuids
   * The response will contain the rule uuid and a list of changes and what tags they would have if the rule was applied
   *
   * @generated from rpc changes.AutoTaggingService.TestRule
   */
  testRule: {
    methodKind: "server_streaming";
    input: typeof TestRuleRequestSchema;
    output: typeof TestRuleResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_changes, 1);

