// @generated by protoc-gen-connect-query v2.0.0 with parameter "target=ts"
// @generated from file config.proto (package config, syntax proto3)
/* eslint-disable */

import { ConfigurationService } from "./config_pb";

/**
 * Get the account config for the user's account
 *
 * @generated from rpc config.ConfigurationService.GetAccountConfig
 */
export const getAccountConfig = ConfigurationService.method.getAccountConfig;

/**
 * Update the account config for the user's account
 *
 * @generated from rpc config.ConfigurationService.UpdateAccountConfig
 */
export const updateAccountConfig = ConfigurationService.method.updateAccountConfig;

/**
 * Create a new HCP Terraform config for the user's account. This follows
 * the same flow as CreateAPIKey, to create a new API key that is then used
 * for the HCP Terraform endpoint URL.
 *
 * @generated from rpc config.ConfigurationService.CreateHcpConfig
 */
export const createHcpConfig = ConfigurationService.method.createHcpConfig;

/**
 * Get the existing HCP Terraform config for the user's account.
 *
 * @generated from rpc config.ConfigurationService.GetHcpConfig
 */
export const getHcpConfig = ConfigurationService.method.getHcpConfig;

/**
 * Remove the existing HCP Terraform config from the user's account.
 *
 * @generated from rpc config.ConfigurationService.DeleteHcpConfig
 */
export const deleteHcpConfig = ConfigurationService.method.deleteHcpConfig;
