// source: gateway.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var items_pb = require('./items_pb.js');
goog.object.extend(proto, items_pb);
var responses_pb = require('./responses_pb.js');
goog.object.extend(proto, responses_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.DeleteSnapshot', null, global);
goog.exportSymbol('proto.ExpandItemRequest', null, global);
goog.exportSymbol('proto.GatewayRequest', null, global);
goog.exportSymbol('proto.GatewayRequest.RequestTypeCase', null, global);
goog.exportSymbol('proto.GatewayRequestStatus', null, global);
goog.exportSymbol('proto.GatewayRequestStatus.Summary', null, global);
goog.exportSymbol('proto.GatewayResponse', null, global);
goog.exportSymbol('proto.GatewayResponse.ResponseTypeCase', null, global);
goog.exportSymbol('proto.ListSnapshots', null, global);
goog.exportSymbol('proto.LoadSnapshot', null, global);
goog.exportSymbol('proto.SnapshotDeleteResult', null, global);
goog.exportSymbol('proto.SnapshotDescriptor', null, global);
goog.exportSymbol('proto.SnapshotList', null, global);
goog.exportSymbol('proto.SnapshotLoadResult', null, global);
goog.exportSymbol('proto.SnapshotStored', null, global);
goog.exportSymbol('proto.StoreSnapshot', null, global);
goog.exportSymbol('proto.UndoItemRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UndoItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UndoItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UndoItemRequest.displayName = 'proto.UndoItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExpandItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExpandItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ExpandItemRequest.displayName = 'proto.ExpandItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SnapshotDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SnapshotDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SnapshotDescriptor.displayName = 'proto.SnapshotDescriptor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListSnapshots = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ListSnapshots, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ListSnapshots.displayName = 'proto.ListSnapshots';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SnapshotList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SnapshotList.repeatedFields_, null);
};
goog.inherits(proto.SnapshotList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SnapshotList.displayName = 'proto.SnapshotList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.StoreSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.StoreSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.StoreSnapshot.displayName = 'proto.StoreSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SnapshotStored = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SnapshotStored, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SnapshotStored.displayName = 'proto.SnapshotStored';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LoadSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.LoadSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LoadSnapshot.displayName = 'proto.LoadSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SnapshotLoadResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SnapshotLoadResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SnapshotLoadResult.displayName = 'proto.SnapshotLoadResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeleteSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DeleteSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DeleteSnapshot.displayName = 'proto.DeleteSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SnapshotDeleteResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SnapshotDeleteResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SnapshotDeleteResult.displayName = 'proto.SnapshotDeleteResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GatewayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.GatewayRequest.oneofGroups_);
};
goog.inherits(proto.GatewayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GatewayRequest.displayName = 'proto.GatewayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GatewayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.GatewayResponse.oneofGroups_);
};
goog.inherits(proto.GatewayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GatewayResponse.displayName = 'proto.GatewayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GatewayRequestStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GatewayRequestStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GatewayRequestStatus.displayName = 'proto.GatewayRequestStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GatewayRequestStatus.Summary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GatewayRequestStatus.Summary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GatewayRequestStatus.Summary.displayName = 'proto.GatewayRequestStatus.Summary';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UndoItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.UndoItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UndoItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UndoItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: msg.getUuid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UndoItemRequest}
 */
proto.UndoItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UndoItemRequest;
  return proto.UndoItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UndoItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UndoItemRequest}
 */
proto.UndoItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UndoItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UndoItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UndoItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UndoItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes UUID = 1;
 * @return {!(string|Uint8Array)}
 */
proto.UndoItemRequest.prototype.getUuid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes UUID = 1;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.UndoItemRequest.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes UUID = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.UndoItemRequest.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.UndoItemRequest} returns this
 */
proto.UndoItemRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExpandItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ExpandItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExpandItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExpandItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && items_pb.Reference.toObject(includeInstance, f),
    linkdepth: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExpandItemRequest}
 */
proto.ExpandItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExpandItemRequest;
  return proto.ExpandItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExpandItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExpandItemRequest}
 */
proto.ExpandItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new items_pb.Reference;
      reader.readMessage(value,items_pb.Reference.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLinkdepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExpandItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExpandItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExpandItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExpandItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      items_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getLinkdepth();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional Reference item = 1;
 * @return {?proto.Reference}
 */
proto.ExpandItemRequest.prototype.getItem = function() {
  return /** @type{?proto.Reference} */ (
    jspb.Message.getWrapperField(this, items_pb.Reference, 1));
};


/**
 * @param {?proto.Reference|undefined} value
 * @return {!proto.ExpandItemRequest} returns this
*/
proto.ExpandItemRequest.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ExpandItemRequest} returns this
 */
proto.ExpandItemRequest.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ExpandItemRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 linkDepth = 2;
 * @return {number}
 */
proto.ExpandItemRequest.prototype.getLinkdepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ExpandItemRequest} returns this
 */
proto.ExpandItemRequest.prototype.setLinkdepth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SnapshotDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.SnapshotDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SnapshotDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: msg.getUuid_asB64(),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SnapshotDescriptor}
 */
proto.SnapshotDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SnapshotDescriptor;
  return proto.SnapshotDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SnapshotDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SnapshotDescriptor}
 */
proto.SnapshotDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SnapshotDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SnapshotDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SnapshotDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes UUID = 1;
 * @return {!(string|Uint8Array)}
 */
proto.SnapshotDescriptor.prototype.getUuid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes UUID = 1;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.SnapshotDescriptor.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes UUID = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.SnapshotDescriptor.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.SnapshotDescriptor} returns this
 */
proto.SnapshotDescriptor.prototype.setUuid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.SnapshotDescriptor.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.SnapshotDescriptor} returns this
*/
proto.SnapshotDescriptor.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SnapshotDescriptor} returns this
 */
proto.SnapshotDescriptor.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SnapshotDescriptor.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.SnapshotDescriptor.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SnapshotDescriptor} returns this
 */
proto.SnapshotDescriptor.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.SnapshotDescriptor.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SnapshotDescriptor} returns this
 */
proto.SnapshotDescriptor.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 size = 5;
 * @return {number}
 */
proto.SnapshotDescriptor.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SnapshotDescriptor} returns this
 */
proto.SnapshotDescriptor.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListSnapshots.prototype.toObject = function(opt_includeInstance) {
  return proto.ListSnapshots.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListSnapshots} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListSnapshots.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListSnapshots}
 */
proto.ListSnapshots.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListSnapshots;
  return proto.ListSnapshots.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListSnapshots} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListSnapshots}
 */
proto.ListSnapshots.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListSnapshots.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListSnapshots.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListSnapshots} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListSnapshots.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SnapshotList.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SnapshotList.prototype.toObject = function(opt_includeInstance) {
  return proto.SnapshotList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SnapshotList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotList.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errormessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    snapshotsList: jspb.Message.toObjectList(msg.getSnapshotsList(),
    proto.SnapshotDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SnapshotList}
 */
proto.SnapshotList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SnapshotList;
  return proto.SnapshotList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SnapshotList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SnapshotList}
 */
proto.SnapshotList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    case 3:
      var value = new proto.SnapshotDescriptor;
      reader.readMessage(value,proto.SnapshotDescriptor.deserializeBinaryFromReader);
      msg.addSnapshots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SnapshotList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SnapshotList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SnapshotList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnapshotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.SnapshotDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.SnapshotList.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SnapshotList} returns this
 */
proto.SnapshotList.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string errorMessage = 2;
 * @return {string}
 */
proto.SnapshotList.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SnapshotList} returns this
 */
proto.SnapshotList.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SnapshotDescriptor snapshots = 3;
 * @return {!Array<!proto.SnapshotDescriptor>}
 */
proto.SnapshotList.prototype.getSnapshotsList = function() {
  return /** @type{!Array<!proto.SnapshotDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SnapshotDescriptor, 3));
};


/**
 * @param {!Array<!proto.SnapshotDescriptor>} value
 * @return {!proto.SnapshotList} returns this
*/
proto.SnapshotList.prototype.setSnapshotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.SnapshotDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SnapshotDescriptor}
 */
proto.SnapshotList.prototype.addSnapshots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.SnapshotDescriptor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SnapshotList} returns this
 */
proto.SnapshotList.prototype.clearSnapshotsList = function() {
  return this.setSnapshotsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.StoreSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.StoreSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.StoreSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StoreSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.StoreSnapshot}
 */
proto.StoreSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.StoreSnapshot;
  return proto.StoreSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.StoreSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.StoreSnapshot}
 */
proto.StoreSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.StoreSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.StoreSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.StoreSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StoreSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.StoreSnapshot.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.StoreSnapshot} returns this
 */
proto.StoreSnapshot.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.StoreSnapshot.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.StoreSnapshot} returns this
 */
proto.StoreSnapshot.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SnapshotStored.prototype.toObject = function(opt_includeInstance) {
  return proto.SnapshotStored.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SnapshotStored} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotStored.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errormessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    snapshot: (f = msg.getSnapshot()) && proto.SnapshotDescriptor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SnapshotStored}
 */
proto.SnapshotStored.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SnapshotStored;
  return proto.SnapshotStored.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SnapshotStored} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SnapshotStored}
 */
proto.SnapshotStored.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    case 3:
      var value = new proto.SnapshotDescriptor;
      reader.readMessage(value,proto.SnapshotDescriptor.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SnapshotStored.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SnapshotStored.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SnapshotStored} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotStored.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.SnapshotDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.SnapshotStored.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SnapshotStored} returns this
 */
proto.SnapshotStored.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string errorMessage = 2;
 * @return {string}
 */
proto.SnapshotStored.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SnapshotStored} returns this
 */
proto.SnapshotStored.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SnapshotDescriptor snapshot = 3;
 * @return {?proto.SnapshotDescriptor}
 */
proto.SnapshotStored.prototype.getSnapshot = function() {
  return /** @type{?proto.SnapshotDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.SnapshotDescriptor, 3));
};


/**
 * @param {?proto.SnapshotDescriptor|undefined} value
 * @return {!proto.SnapshotStored} returns this
*/
proto.SnapshotStored.prototype.setSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SnapshotStored} returns this
 */
proto.SnapshotStored.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SnapshotStored.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LoadSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.LoadSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LoadSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoadSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: msg.getUuid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LoadSnapshot}
 */
proto.LoadSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LoadSnapshot;
  return proto.LoadSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LoadSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LoadSnapshot}
 */
proto.LoadSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LoadSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LoadSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LoadSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoadSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes UUID = 1;
 * @return {!(string|Uint8Array)}
 */
proto.LoadSnapshot.prototype.getUuid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes UUID = 1;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.LoadSnapshot.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes UUID = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.LoadSnapshot.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.LoadSnapshot} returns this
 */
proto.LoadSnapshot.prototype.setUuid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SnapshotLoadResult.prototype.toObject = function(opt_includeInstance) {
  return proto.SnapshotLoadResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SnapshotLoadResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotLoadResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errormessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SnapshotLoadResult}
 */
proto.SnapshotLoadResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SnapshotLoadResult;
  return proto.SnapshotLoadResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SnapshotLoadResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SnapshotLoadResult}
 */
proto.SnapshotLoadResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SnapshotLoadResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SnapshotLoadResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SnapshotLoadResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotLoadResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.SnapshotLoadResult.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SnapshotLoadResult} returns this
 */
proto.SnapshotLoadResult.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string errorMessage = 2;
 * @return {string}
 */
proto.SnapshotLoadResult.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SnapshotLoadResult} returns this
 */
proto.SnapshotLoadResult.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DeleteSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.DeleteSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DeleteSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: msg.getUuid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeleteSnapshot}
 */
proto.DeleteSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DeleteSnapshot;
  return proto.DeleteSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeleteSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeleteSnapshot}
 */
proto.DeleteSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeleteSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DeleteSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeleteSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes UUID = 1;
 * @return {!(string|Uint8Array)}
 */
proto.DeleteSnapshot.prototype.getUuid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes UUID = 1;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.DeleteSnapshot.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes UUID = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.DeleteSnapshot.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.DeleteSnapshot} returns this
 */
proto.DeleteSnapshot.prototype.setUuid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SnapshotDeleteResult.prototype.toObject = function(opt_includeInstance) {
  return proto.SnapshotDeleteResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SnapshotDeleteResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotDeleteResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errormessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SnapshotDeleteResult}
 */
proto.SnapshotDeleteResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SnapshotDeleteResult;
  return proto.SnapshotDeleteResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SnapshotDeleteResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SnapshotDeleteResult}
 */
proto.SnapshotDeleteResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SnapshotDeleteResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SnapshotDeleteResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SnapshotDeleteResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SnapshotDeleteResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.SnapshotDeleteResult.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SnapshotDeleteResult} returns this
 */
proto.SnapshotDeleteResult.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string errorMessage = 2;
 * @return {string}
 */
proto.SnapshotDeleteResult.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SnapshotDeleteResult} returns this
 */
proto.SnapshotDeleteResult.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.GatewayRequest.oneofGroups_ = [[1,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.GatewayRequest.RequestTypeCase = {
  REQUEST_TYPE_NOT_SET: 0,
  NEWREQUEST: 1,
  CANCELREQUEST: 3,
  UNDOREQUEST: 4,
  EXCLUDEITEM: 5,
  INCLUDEITEM: 6,
  EXPANDITEM: 7,
  UNEXPANDITEM: 8,
  LISTSNAPSHOTS: 9,
  STORESNAPSHOT: 10,
  LOADSNAPSHOT: 11,
  DELETESNAPSHOT: 12
};

/**
 * @return {proto.GatewayRequest.RequestTypeCase}
 */
proto.GatewayRequest.prototype.getRequestTypeCase = function() {
  return /** @type {proto.GatewayRequest.RequestTypeCase} */(jspb.Message.computeOneofCase(this, proto.GatewayRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GatewayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.GatewayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GatewayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    newrequest: (f = msg.getNewrequest()) && items_pb.ItemRequest.toObject(includeInstance, f),
    cancelrequest: (f = msg.getCancelrequest()) && items_pb.CancelItemRequest.toObject(includeInstance, f),
    undorequest: (f = msg.getUndorequest()) && proto.UndoItemRequest.toObject(includeInstance, f),
    excludeitem: (f = msg.getExcludeitem()) && items_pb.Reference.toObject(includeInstance, f),
    includeitem: (f = msg.getIncludeitem()) && items_pb.Reference.toObject(includeInstance, f),
    expanditem: (f = msg.getExpanditem()) && proto.ExpandItemRequest.toObject(includeInstance, f),
    unexpanditem: (f = msg.getUnexpanditem()) && items_pb.Reference.toObject(includeInstance, f),
    listsnapshots: (f = msg.getListsnapshots()) && proto.ListSnapshots.toObject(includeInstance, f),
    storesnapshot: (f = msg.getStoresnapshot()) && proto.StoreSnapshot.toObject(includeInstance, f),
    loadsnapshot: (f = msg.getLoadsnapshot()) && proto.LoadSnapshot.toObject(includeInstance, f),
    deletesnapshot: (f = msg.getDeletesnapshot()) && proto.DeleteSnapshot.toObject(includeInstance, f),
    minstatusinterval: (f = msg.getMinstatusinterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GatewayRequest}
 */
proto.GatewayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GatewayRequest;
  return proto.GatewayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GatewayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GatewayRequest}
 */
proto.GatewayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new items_pb.ItemRequest;
      reader.readMessage(value,items_pb.ItemRequest.deserializeBinaryFromReader);
      msg.setNewrequest(value);
      break;
    case 3:
      var value = new items_pb.CancelItemRequest;
      reader.readMessage(value,items_pb.CancelItemRequest.deserializeBinaryFromReader);
      msg.setCancelrequest(value);
      break;
    case 4:
      var value = new proto.UndoItemRequest;
      reader.readMessage(value,proto.UndoItemRequest.deserializeBinaryFromReader);
      msg.setUndorequest(value);
      break;
    case 5:
      var value = new items_pb.Reference;
      reader.readMessage(value,items_pb.Reference.deserializeBinaryFromReader);
      msg.setExcludeitem(value);
      break;
    case 6:
      var value = new items_pb.Reference;
      reader.readMessage(value,items_pb.Reference.deserializeBinaryFromReader);
      msg.setIncludeitem(value);
      break;
    case 7:
      var value = new proto.ExpandItemRequest;
      reader.readMessage(value,proto.ExpandItemRequest.deserializeBinaryFromReader);
      msg.setExpanditem(value);
      break;
    case 8:
      var value = new items_pb.Reference;
      reader.readMessage(value,items_pb.Reference.deserializeBinaryFromReader);
      msg.setUnexpanditem(value);
      break;
    case 9:
      var value = new proto.ListSnapshots;
      reader.readMessage(value,proto.ListSnapshots.deserializeBinaryFromReader);
      msg.setListsnapshots(value);
      break;
    case 10:
      var value = new proto.StoreSnapshot;
      reader.readMessage(value,proto.StoreSnapshot.deserializeBinaryFromReader);
      msg.setStoresnapshot(value);
      break;
    case 11:
      var value = new proto.LoadSnapshot;
      reader.readMessage(value,proto.LoadSnapshot.deserializeBinaryFromReader);
      msg.setLoadsnapshot(value);
      break;
    case 12:
      var value = new proto.DeleteSnapshot;
      reader.readMessage(value,proto.DeleteSnapshot.deserializeBinaryFromReader);
      msg.setDeletesnapshot(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMinstatusinterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GatewayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GatewayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GatewayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      items_pb.ItemRequest.serializeBinaryToWriter
    );
  }
  f = message.getCancelrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      items_pb.CancelItemRequest.serializeBinaryToWriter
    );
  }
  f = message.getUndorequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.UndoItemRequest.serializeBinaryToWriter
    );
  }
  f = message.getExcludeitem();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      items_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getIncludeitem();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      items_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getExpanditem();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ExpandItemRequest.serializeBinaryToWriter
    );
  }
  f = message.getUnexpanditem();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      items_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getListsnapshots();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ListSnapshots.serializeBinaryToWriter
    );
  }
  f = message.getStoresnapshot();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.StoreSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getLoadsnapshot();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.LoadSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getDeletesnapshot();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.DeleteSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getMinstatusinterval();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemRequest newRequest = 1;
 * @return {?proto.ItemRequest}
 */
proto.GatewayRequest.prototype.getNewrequest = function() {
  return /** @type{?proto.ItemRequest} */ (
    jspb.Message.getWrapperField(this, items_pb.ItemRequest, 1));
};


/**
 * @param {?proto.ItemRequest|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setNewrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearNewrequest = function() {
  return this.setNewrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasNewrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CancelItemRequest cancelRequest = 3;
 * @return {?proto.CancelItemRequest}
 */
proto.GatewayRequest.prototype.getCancelrequest = function() {
  return /** @type{?proto.CancelItemRequest} */ (
    jspb.Message.getWrapperField(this, items_pb.CancelItemRequest, 3));
};


/**
 * @param {?proto.CancelItemRequest|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setCancelrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearCancelrequest = function() {
  return this.setCancelrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasCancelrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UndoItemRequest undoRequest = 4;
 * @return {?proto.UndoItemRequest}
 */
proto.GatewayRequest.prototype.getUndorequest = function() {
  return /** @type{?proto.UndoItemRequest} */ (
    jspb.Message.getWrapperField(this, proto.UndoItemRequest, 4));
};


/**
 * @param {?proto.UndoItemRequest|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setUndorequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearUndorequest = function() {
  return this.setUndorequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasUndorequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Reference excludeItem = 5;
 * @return {?proto.Reference}
 */
proto.GatewayRequest.prototype.getExcludeitem = function() {
  return /** @type{?proto.Reference} */ (
    jspb.Message.getWrapperField(this, items_pb.Reference, 5));
};


/**
 * @param {?proto.Reference|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setExcludeitem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearExcludeitem = function() {
  return this.setExcludeitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasExcludeitem = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Reference includeItem = 6;
 * @return {?proto.Reference}
 */
proto.GatewayRequest.prototype.getIncludeitem = function() {
  return /** @type{?proto.Reference} */ (
    jspb.Message.getWrapperField(this, items_pb.Reference, 6));
};


/**
 * @param {?proto.Reference|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setIncludeitem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearIncludeitem = function() {
  return this.setIncludeitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasIncludeitem = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ExpandItemRequest expandItem = 7;
 * @return {?proto.ExpandItemRequest}
 */
proto.GatewayRequest.prototype.getExpanditem = function() {
  return /** @type{?proto.ExpandItemRequest} */ (
    jspb.Message.getWrapperField(this, proto.ExpandItemRequest, 7));
};


/**
 * @param {?proto.ExpandItemRequest|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setExpanditem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearExpanditem = function() {
  return this.setExpanditem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasExpanditem = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Reference unexpandItem = 8;
 * @return {?proto.Reference}
 */
proto.GatewayRequest.prototype.getUnexpanditem = function() {
  return /** @type{?proto.Reference} */ (
    jspb.Message.getWrapperField(this, items_pb.Reference, 8));
};


/**
 * @param {?proto.Reference|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setUnexpanditem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearUnexpanditem = function() {
  return this.setUnexpanditem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasUnexpanditem = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ListSnapshots listSnapshots = 9;
 * @return {?proto.ListSnapshots}
 */
proto.GatewayRequest.prototype.getListsnapshots = function() {
  return /** @type{?proto.ListSnapshots} */ (
    jspb.Message.getWrapperField(this, proto.ListSnapshots, 9));
};


/**
 * @param {?proto.ListSnapshots|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setListsnapshots = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearListsnapshots = function() {
  return this.setListsnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasListsnapshots = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional StoreSnapshot storeSnapshot = 10;
 * @return {?proto.StoreSnapshot}
 */
proto.GatewayRequest.prototype.getStoresnapshot = function() {
  return /** @type{?proto.StoreSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.StoreSnapshot, 10));
};


/**
 * @param {?proto.StoreSnapshot|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setStoresnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearStoresnapshot = function() {
  return this.setStoresnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasStoresnapshot = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional LoadSnapshot loadSnapshot = 11;
 * @return {?proto.LoadSnapshot}
 */
proto.GatewayRequest.prototype.getLoadsnapshot = function() {
  return /** @type{?proto.LoadSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.LoadSnapshot, 11));
};


/**
 * @param {?proto.LoadSnapshot|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setLoadsnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearLoadsnapshot = function() {
  return this.setLoadsnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasLoadsnapshot = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DeleteSnapshot deleteSnapshot = 12;
 * @return {?proto.DeleteSnapshot}
 */
proto.GatewayRequest.prototype.getDeletesnapshot = function() {
  return /** @type{?proto.DeleteSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.DeleteSnapshot, 12));
};


/**
 * @param {?proto.DeleteSnapshot|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setDeletesnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.GatewayRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearDeletesnapshot = function() {
  return this.setDeletesnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasDeletesnapshot = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Duration minStatusInterval = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.GatewayRequest.prototype.getMinstatusinterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.GatewayRequest} returns this
*/
proto.GatewayRequest.prototype.setMinstatusinterval = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequest} returns this
 */
proto.GatewayRequest.prototype.clearMinstatusinterval = function() {
  return this.setMinstatusinterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequest.prototype.hasMinstatusinterval = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.GatewayResponse.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.GatewayResponse.ResponseTypeCase = {
  RESPONSE_TYPE_NOT_SET: 0,
  NEWITEM: 2,
  NEWEDGE: 3,
  STATUS: 4,
  ERROR: 5,
  NEWITEMREQUESTERROR: 6,
  DELETEITEM: 7,
  DELETEEDGE: 8,
  UPDATEITEM: 9,
  SNAPSHOTLIST: 10,
  SNAPSHOTSTORED: 11,
  SNAPSHOTLOADRESULT: 12,
  SNAPSHOTDELETERESULT: 13
};

/**
 * @return {proto.GatewayResponse.ResponseTypeCase}
 */
proto.GatewayResponse.prototype.getResponseTypeCase = function() {
  return /** @type {proto.GatewayResponse.ResponseTypeCase} */(jspb.Message.computeOneofCase(this, proto.GatewayResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GatewayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.GatewayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GatewayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    newitem: (f = msg.getNewitem()) && items_pb.Item.toObject(includeInstance, f),
    newedge: (f = msg.getNewedge()) && items_pb.Edge.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.GatewayRequestStatus.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 5, ""),
    newitemrequesterror: (f = msg.getNewitemrequesterror()) && responses_pb.ItemRequestError.toObject(includeInstance, f),
    deleteitem: (f = msg.getDeleteitem()) && items_pb.Reference.toObject(includeInstance, f),
    deleteedge: (f = msg.getDeleteedge()) && items_pb.Edge.toObject(includeInstance, f),
    updateitem: (f = msg.getUpdateitem()) && items_pb.Item.toObject(includeInstance, f),
    snapshotlist: (f = msg.getSnapshotlist()) && proto.SnapshotList.toObject(includeInstance, f),
    snapshotstored: (f = msg.getSnapshotstored()) && proto.SnapshotStored.toObject(includeInstance, f),
    snapshotloadresult: (f = msg.getSnapshotloadresult()) && proto.SnapshotLoadResult.toObject(includeInstance, f),
    snapshotdeleteresult: (f = msg.getSnapshotdeleteresult()) && proto.SnapshotDeleteResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GatewayResponse}
 */
proto.GatewayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GatewayResponse;
  return proto.GatewayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GatewayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GatewayResponse}
 */
proto.GatewayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new items_pb.Item;
      reader.readMessage(value,items_pb.Item.deserializeBinaryFromReader);
      msg.setNewitem(value);
      break;
    case 3:
      var value = new items_pb.Edge;
      reader.readMessage(value,items_pb.Edge.deserializeBinaryFromReader);
      msg.setNewedge(value);
      break;
    case 4:
      var value = new proto.GatewayRequestStatus;
      reader.readMessage(value,proto.GatewayRequestStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 6:
      var value = new responses_pb.ItemRequestError;
      reader.readMessage(value,responses_pb.ItemRequestError.deserializeBinaryFromReader);
      msg.setNewitemrequesterror(value);
      break;
    case 7:
      var value = new items_pb.Reference;
      reader.readMessage(value,items_pb.Reference.deserializeBinaryFromReader);
      msg.setDeleteitem(value);
      break;
    case 8:
      var value = new items_pb.Edge;
      reader.readMessage(value,items_pb.Edge.deserializeBinaryFromReader);
      msg.setDeleteedge(value);
      break;
    case 9:
      var value = new items_pb.Item;
      reader.readMessage(value,items_pb.Item.deserializeBinaryFromReader);
      msg.setUpdateitem(value);
      break;
    case 10:
      var value = new proto.SnapshotList;
      reader.readMessage(value,proto.SnapshotList.deserializeBinaryFromReader);
      msg.setSnapshotlist(value);
      break;
    case 11:
      var value = new proto.SnapshotStored;
      reader.readMessage(value,proto.SnapshotStored.deserializeBinaryFromReader);
      msg.setSnapshotstored(value);
      break;
    case 12:
      var value = new proto.SnapshotLoadResult;
      reader.readMessage(value,proto.SnapshotLoadResult.deserializeBinaryFromReader);
      msg.setSnapshotloadresult(value);
      break;
    case 13:
      var value = new proto.SnapshotDeleteResult;
      reader.readMessage(value,proto.SnapshotDeleteResult.deserializeBinaryFromReader);
      msg.setSnapshotdeleteresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GatewayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GatewayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GatewayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewitem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      items_pb.Item.serializeBinaryToWriter
    );
  }
  f = message.getNewedge();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      items_pb.Edge.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.GatewayRequestStatus.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNewitemrequesterror();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      responses_pb.ItemRequestError.serializeBinaryToWriter
    );
  }
  f = message.getDeleteitem();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      items_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getDeleteedge();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      items_pb.Edge.serializeBinaryToWriter
    );
  }
  f = message.getUpdateitem();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      items_pb.Item.serializeBinaryToWriter
    );
  }
  f = message.getSnapshotlist();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.SnapshotList.serializeBinaryToWriter
    );
  }
  f = message.getSnapshotstored();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.SnapshotStored.serializeBinaryToWriter
    );
  }
  f = message.getSnapshotloadresult();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.SnapshotLoadResult.serializeBinaryToWriter
    );
  }
  f = message.getSnapshotdeleteresult();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.SnapshotDeleteResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional Item newItem = 2;
 * @return {?proto.Item}
 */
proto.GatewayResponse.prototype.getNewitem = function() {
  return /** @type{?proto.Item} */ (
    jspb.Message.getWrapperField(this, items_pb.Item, 2));
};


/**
 * @param {?proto.Item|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setNewitem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearNewitem = function() {
  return this.setNewitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasNewitem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Edge newEdge = 3;
 * @return {?proto.Edge}
 */
proto.GatewayResponse.prototype.getNewedge = function() {
  return /** @type{?proto.Edge} */ (
    jspb.Message.getWrapperField(this, items_pb.Edge, 3));
};


/**
 * @param {?proto.Edge|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setNewedge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearNewedge = function() {
  return this.setNewedge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasNewedge = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GatewayRequestStatus status = 4;
 * @return {?proto.GatewayRequestStatus}
 */
proto.GatewayResponse.prototype.getStatus = function() {
  return /** @type{?proto.GatewayRequestStatus} */ (
    jspb.Message.getWrapperField(this, proto.GatewayRequestStatus, 4));
};


/**
 * @param {?proto.GatewayRequestStatus|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string error = 5;
 * @return {string}
 */
proto.GatewayResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearError = function() {
  return jspb.Message.setOneofField(this, 5, proto.GatewayResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ItemRequestError newItemRequestError = 6;
 * @return {?proto.ItemRequestError}
 */
proto.GatewayResponse.prototype.getNewitemrequesterror = function() {
  return /** @type{?proto.ItemRequestError} */ (
    jspb.Message.getWrapperField(this, responses_pb.ItemRequestError, 6));
};


/**
 * @param {?proto.ItemRequestError|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setNewitemrequesterror = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearNewitemrequesterror = function() {
  return this.setNewitemrequesterror(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasNewitemrequesterror = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Reference deleteItem = 7;
 * @return {?proto.Reference}
 */
proto.GatewayResponse.prototype.getDeleteitem = function() {
  return /** @type{?proto.Reference} */ (
    jspb.Message.getWrapperField(this, items_pb.Reference, 7));
};


/**
 * @param {?proto.Reference|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setDeleteitem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearDeleteitem = function() {
  return this.setDeleteitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasDeleteitem = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Edge deleteEdge = 8;
 * @return {?proto.Edge}
 */
proto.GatewayResponse.prototype.getDeleteedge = function() {
  return /** @type{?proto.Edge} */ (
    jspb.Message.getWrapperField(this, items_pb.Edge, 8));
};


/**
 * @param {?proto.Edge|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setDeleteedge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearDeleteedge = function() {
  return this.setDeleteedge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasDeleteedge = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Item updateItem = 9;
 * @return {?proto.Item}
 */
proto.GatewayResponse.prototype.getUpdateitem = function() {
  return /** @type{?proto.Item} */ (
    jspb.Message.getWrapperField(this, items_pb.Item, 9));
};


/**
 * @param {?proto.Item|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setUpdateitem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearUpdateitem = function() {
  return this.setUpdateitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasUpdateitem = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SnapshotList snapshotList = 10;
 * @return {?proto.SnapshotList}
 */
proto.GatewayResponse.prototype.getSnapshotlist = function() {
  return /** @type{?proto.SnapshotList} */ (
    jspb.Message.getWrapperField(this, proto.SnapshotList, 10));
};


/**
 * @param {?proto.SnapshotList|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setSnapshotlist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearSnapshotlist = function() {
  return this.setSnapshotlist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasSnapshotlist = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SnapshotStored snapshotStored = 11;
 * @return {?proto.SnapshotStored}
 */
proto.GatewayResponse.prototype.getSnapshotstored = function() {
  return /** @type{?proto.SnapshotStored} */ (
    jspb.Message.getWrapperField(this, proto.SnapshotStored, 11));
};


/**
 * @param {?proto.SnapshotStored|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setSnapshotstored = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearSnapshotstored = function() {
  return this.setSnapshotstored(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasSnapshotstored = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional SnapshotLoadResult snapshotLoadResult = 12;
 * @return {?proto.SnapshotLoadResult}
 */
proto.GatewayResponse.prototype.getSnapshotloadresult = function() {
  return /** @type{?proto.SnapshotLoadResult} */ (
    jspb.Message.getWrapperField(this, proto.SnapshotLoadResult, 12));
};


/**
 * @param {?proto.SnapshotLoadResult|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setSnapshotloadresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearSnapshotloadresult = function() {
  return this.setSnapshotloadresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasSnapshotloadresult = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional SnapshotDeleteResult snapshotDeleteResult = 13;
 * @return {?proto.SnapshotDeleteResult}
 */
proto.GatewayResponse.prototype.getSnapshotdeleteresult = function() {
  return /** @type{?proto.SnapshotDeleteResult} */ (
    jspb.Message.getWrapperField(this, proto.SnapshotDeleteResult, 13));
};


/**
 * @param {?proto.SnapshotDeleteResult|undefined} value
 * @return {!proto.GatewayResponse} returns this
*/
proto.GatewayResponse.prototype.setSnapshotdeleteresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.GatewayResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayResponse} returns this
 */
proto.GatewayResponse.prototype.clearSnapshotdeleteresult = function() {
  return this.setSnapshotdeleteresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayResponse.prototype.hasSnapshotdeleteresult = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GatewayRequestStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.GatewayRequestStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GatewayRequestStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayRequestStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    responderstatesMap: (f = msg.getResponderstatesMap()) ? f.toObject(includeInstance, undefined) : [],
    summary: (f = msg.getSummary()) && proto.GatewayRequestStatus.Summary.toObject(includeInstance, f),
    postprocessingcomplete: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GatewayRequestStatus}
 */
proto.GatewayRequestStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GatewayRequestStatus;
  return proto.GatewayRequestStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GatewayRequestStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GatewayRequestStatus}
 */
proto.GatewayRequestStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getResponderstatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 3:
      var value = new proto.GatewayRequestStatus.Summary;
      reader.readMessage(value,proto.GatewayRequestStatus.Summary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPostprocessingcomplete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GatewayRequestStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GatewayRequestStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GatewayRequestStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayRequestStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponderstatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.GatewayRequestStatus.Summary.serializeBinaryToWriter
    );
  }
  f = message.getPostprocessingcomplete();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GatewayRequestStatus.Summary.prototype.toObject = function(opt_includeInstance) {
  return proto.GatewayRequestStatus.Summary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GatewayRequestStatus.Summary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayRequestStatus.Summary.toObject = function(includeInstance, msg) {
  var f, obj = {
    working: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stalled: jspb.Message.getFieldWithDefault(msg, 2, 0),
    complete: jspb.Message.getFieldWithDefault(msg, 3, 0),
    error: jspb.Message.getFieldWithDefault(msg, 4, 0),
    cancelled: jspb.Message.getFieldWithDefault(msg, 5, 0),
    responders: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GatewayRequestStatus.Summary}
 */
proto.GatewayRequestStatus.Summary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GatewayRequestStatus.Summary;
  return proto.GatewayRequestStatus.Summary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GatewayRequestStatus.Summary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GatewayRequestStatus.Summary}
 */
proto.GatewayRequestStatus.Summary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWorking(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStalled(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setComplete(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setError(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCancelled(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GatewayRequestStatus.Summary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GatewayRequestStatus.Summary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GatewayRequestStatus.Summary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GatewayRequestStatus.Summary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorking();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStalled();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getComplete();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getError();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCancelled();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getResponders();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 working = 1;
 * @return {number}
 */
proto.GatewayRequestStatus.Summary.prototype.getWorking = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.GatewayRequestStatus.Summary} returns this
 */
proto.GatewayRequestStatus.Summary.prototype.setWorking = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 stalled = 2;
 * @return {number}
 */
proto.GatewayRequestStatus.Summary.prototype.getStalled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.GatewayRequestStatus.Summary} returns this
 */
proto.GatewayRequestStatus.Summary.prototype.setStalled = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 complete = 3;
 * @return {number}
 */
proto.GatewayRequestStatus.Summary.prototype.getComplete = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.GatewayRequestStatus.Summary} returns this
 */
proto.GatewayRequestStatus.Summary.prototype.setComplete = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 error = 4;
 * @return {number}
 */
proto.GatewayRequestStatus.Summary.prototype.getError = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.GatewayRequestStatus.Summary} returns this
 */
proto.GatewayRequestStatus.Summary.prototype.setError = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 cancelled = 5;
 * @return {number}
 */
proto.GatewayRequestStatus.Summary.prototype.getCancelled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.GatewayRequestStatus.Summary} returns this
 */
proto.GatewayRequestStatus.Summary.prototype.setCancelled = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 responders = 6;
 * @return {number}
 */
proto.GatewayRequestStatus.Summary.prototype.getResponders = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.GatewayRequestStatus.Summary} returns this
 */
proto.GatewayRequestStatus.Summary.prototype.setResponders = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * map<string, ResponderState> responderStates = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.ResponderState>}
 */
proto.GatewayRequestStatus.prototype.getResponderstatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.ResponderState>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.GatewayRequestStatus} returns this
 */
proto.GatewayRequestStatus.prototype.clearResponderstatesMap = function() {
  this.getResponderstatesMap().clear();
  return this;};


/**
 * optional Summary summary = 3;
 * @return {?proto.GatewayRequestStatus.Summary}
 */
proto.GatewayRequestStatus.prototype.getSummary = function() {
  return /** @type{?proto.GatewayRequestStatus.Summary} */ (
    jspb.Message.getWrapperField(this, proto.GatewayRequestStatus.Summary, 3));
};


/**
 * @param {?proto.GatewayRequestStatus.Summary|undefined} value
 * @return {!proto.GatewayRequestStatus} returns this
*/
proto.GatewayRequestStatus.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GatewayRequestStatus} returns this
 */
proto.GatewayRequestStatus.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GatewayRequestStatus.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool postProcessingComplete = 4;
 * @return {boolean}
 */
proto.GatewayRequestStatus.prototype.getPostprocessingcomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.GatewayRequestStatus} returns this
 */
proto.GatewayRequestStatus.prototype.setPostprocessingcomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto);
