// @generated by protoc-gen-connect-query v0.4.1 with parameter "target=ts,import_extension=.ts"
// @generated from file invites.proto (package invites, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateInviteRequest, CreateInviteResponse, ListInvitesRequest, ListInvitesResponse, RevokeInviteRequest, RevokeInviteResponse } from "./invites_pb.ts";

export const typeName = "invites.InviteService";

/**
 * @generated from rpc invites.InviteService.CreateInvite
 */
export const createInvite = createQueryService({
  service: {
    methods: {
      createInvite: {
        name: "CreateInvite",
        kind: MethodKind.Unary,
        I: CreateInviteRequest,
        O: CreateInviteResponse,
      },
    },
    typeName: "invites.InviteService",
  },
}).createInvite;

/**
 * @generated from rpc invites.InviteService.ListInvites
 */
export const listInvites = createQueryService({
  service: {
    methods: {
      listInvites: {
        name: "ListInvites",
        kind: MethodKind.Unary,
        I: ListInvitesRequest,
        O: ListInvitesResponse,
      },
    },
    typeName: "invites.InviteService",
  },
}).listInvites;

/**
 * @generated from rpc invites.InviteService.RevokeInvite
 */
export const revokeInvite = createQueryService({
  service: {
    methods: {
      revokeInvite: {
        name: "RevokeInvite",
        kind: MethodKind.Unary,
        I: RevokeInviteRequest,
        O: RevokeInviteResponse,
      },
    },
    typeName: "invites.InviteService",
  },
}).revokeInvite;
