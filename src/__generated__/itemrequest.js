// source: items.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ItemRequest');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.Duration');

goog.forwardDeclare('proto.RequestMethod');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ItemRequest.displayName = 'proto.ItemRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    query: jspb.Message.getFieldWithDefault(msg, 3, ""),
    linkdepth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    scope: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ignorecache: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    uuid: msg.getUuid_asB64(),
    timeout: (f = msg.getTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    itemsubject: jspb.Message.getFieldWithDefault(msg, 16, ""),
    responsesubject: jspb.Message.getFieldWithDefault(msg, 17, ""),
    errorsubject: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ItemRequest}
 */
proto.ItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ItemRequest;
  return proto.ItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ItemRequest}
 */
proto.ItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!proto.RequestMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLinkdepth(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnorecache(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    case 8:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemsubject(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsesubject(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorsubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLinkdepth();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIgnorecache();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getItemsubject();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getResponsesubject();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getErrorsubject();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.ItemRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RequestMethod method = 2;
 * @return {!proto.RequestMethod}
 */
proto.ItemRequest.prototype.getMethod = function() {
  return /** @type {!proto.RequestMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.RequestMethod} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string query = 3;
 * @return {string}
 */
proto.ItemRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 linkDepth = 4;
 * @return {number}
 */
proto.ItemRequest.prototype.getLinkdepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setLinkdepth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string scope = 5;
 * @return {string}
 */
proto.ItemRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool ignoreCache = 6;
 * @return {boolean}
 */
proto.ItemRequest.prototype.getIgnorecache = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setIgnorecache = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bytes UUID = 7;
 * @return {!(string|Uint8Array)}
 */
proto.ItemRequest.prototype.getUuid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes UUID = 7;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.ItemRequest.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes UUID = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.ItemRequest.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional google.protobuf.Duration timeout = 8;
 * @return {?proto.google.protobuf.Duration}
 */
proto.ItemRequest.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 8));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.ItemRequest} returns this
*/
proto.ItemRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ItemRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string itemSubject = 16;
 * @return {string}
 */
proto.ItemRequest.prototype.getItemsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setItemsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string responseSubject = 17;
 * @return {string}
 */
proto.ItemRequest.prototype.getResponsesubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setResponsesubject = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string errorSubject = 18;
 * @return {string}
 */
proto.ItemRequest.prototype.getErrorsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.ItemRequest} returns this
 */
proto.ItemRequest.prototype.setErrorsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


