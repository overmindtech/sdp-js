// @generated by protoc-gen-connect-query v0.2.0 with parameter "target=ts,import_extension=.ts"
// @generated from file snapshots.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateSnapshotRequest, CreateSnapshotResponse, DeleteSnapshotRequest, DeleteSnapshotResponse, GetSnapshotRequest, GetSnapshotResponse, ListSnapshotResponse, ListSnapshotsRequest, UpdateSnapshotRequest, UpdateSnapshotResponse } from "./snapshots_pb.ts";

export const typeName = "SnapshotsService";

/**
 * @generated from rpc SnapshotsService.ListSnapshots
 */
export const listSnapshots = createQueryService({
  service: {
    methods: {
      listSnapshots: {
        name: "ListSnapshots",
        kind: MethodKind.Unary,
        I: ListSnapshotsRequest,
        O: ListSnapshotResponse,
      },
    },
    typeName: "SnapshotsService",
  },
}).listSnapshots;

/**
 * @generated from rpc SnapshotsService.CreateSnapshot
 */
export const createSnapshot = createQueryService({
  service: {
    methods: {
      createSnapshot: {
        name: "CreateSnapshot",
        kind: MethodKind.Unary,
        I: CreateSnapshotRequest,
        O: CreateSnapshotResponse,
      },
    },
    typeName: "SnapshotsService",
  },
}).createSnapshot;

/**
 * @generated from rpc SnapshotsService.GetSnapshot
 */
export const getSnapshot = createQueryService({
  service: {
    methods: {
      getSnapshot: {
        name: "GetSnapshot",
        kind: MethodKind.Unary,
        I: GetSnapshotRequest,
        O: GetSnapshotResponse,
      },
    },
    typeName: "SnapshotsService",
  },
}).getSnapshot;

/**
 * @generated from rpc SnapshotsService.UpdateSnapshot
 */
export const updateSnapshot = createQueryService({
  service: {
    methods: {
      updateSnapshot: {
        name: "UpdateSnapshot",
        kind: MethodKind.Unary,
        I: UpdateSnapshotRequest,
        O: UpdateSnapshotResponse,
      },
    },
    typeName: "SnapshotsService",
  },
}).updateSnapshot;

/**
 * @generated from rpc SnapshotsService.DeleteSnapshot
 */
export const deleteSnapshot = createQueryService({
  service: {
    methods: {
      deleteSnapshot: {
        name: "DeleteSnapshot",
        kind: MethodKind.Unary,
        I: DeleteSnapshotRequest,
        O: DeleteSnapshotResponse,
      },
    },
    typeName: "SnapshotsService",
  },
}).deleteSnapshot;
