// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file util.proto (syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file util.proto.
 */
export const file_util: GenFile = /*@__PURE__*/
  fileDesc("Cgp1dGlsLnByb3RvIjMKEVBhZ2luYXRpb25SZXF1ZXN0EhAKCHBhZ2VTaXplGAEgASgFEgwKBHBhZ2UYAiABKAUiXAoSUGFnaW5hdGlvblJlc3BvbnNlEhAKCHBhZ2VTaXplGAEgASgFEhIKCnRvdGFsSXRlbXMYAiABKAUSDAoEcGFnZRgDIAEoBRISCgp0b3RhbFBhZ2VzGAQgASgFKm0KCVNvcnRPcmRlchIaChZBTFBIQUJFVElDQUxfQVNDRU5ESU5HEAASGwoXQUxQSEFCRVRJQ0FMX0RFU0NFTkRJTkcQARISCg5EQVRFX0FTQ0VORElORxACEhMKD0RBVEVfREVTQ0VORElORxADQiRaImdpdGh1Yi5jb20vb3Zlcm1pbmR0ZWNoL3NkcC1nbztzZHBiBnByb3RvMw");

/**
 * @generated from message PaginationRequest
 */
export type PaginationRequest = Message<"PaginationRequest"> & {
  /**
   * The number of items to return in a single page. The minimum is 10 and the
   * maximum is 100.
   *
   * @generated from field: int32 pageSize = 1;
   */
  pageSize: number;

  /**
   * The page number to return. the first page is 1. If the page number is
   * larger than the total number of pages, the last page is returned. If the
   * page number is negative, the first page 1 is returned.
   *
   * @generated from field: int32 page = 2;
   */
  page: number;
};

/**
 * Describes the message PaginationRequest.
 * Use `create(PaginationRequestSchema)` to create a new message.
 */
export const PaginationRequestSchema: GenMessage<PaginationRequest> = /*@__PURE__*/
  messageDesc(file_util, 0);

/**
 * @generated from message PaginationResponse
 */
export type PaginationResponse = Message<"PaginationResponse"> & {
  /**
   * The number of items in the current page
   *
   * @generated from field: int32 pageSize = 1;
   */
  pageSize: number;

  /**
   * The total number of items available. Expensive to calculate
   * https://www.cybertec-postgresql.com/en/pagination-problem-total-result-count/
   * this is done as a separate query
   *
   * @generated from field: int32 totalItems = 2;
   */
  totalItems: number;

  /**
   * The current page number, NB if the user provided a negative page number,
   * this will be 1, if the user provided a page number larger than the total
   * number of pages, this will be the last page. If there are no results at
   * all, this will be 0.
   *
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * The total number of pages available. based on the totalItems and pageSize.
   * If there are no results this will be zero.
   *
   * @generated from field: int32 totalPages = 4;
   */
  totalPages: number;
};

/**
 * Describes the message PaginationResponse.
 * Use `create(PaginationResponseSchema)` to create a new message.
 */
export const PaginationResponseSchema: GenMessage<PaginationResponse> = /*@__PURE__*/
  messageDesc(file_util, 1);

/**
 * @generated from enum SortOrder
 */
export enum SortOrder {
  /**
   * A-Z
   *
   * @generated from enum value: ALPHABETICAL_ASCENDING = 0;
   */
  ALPHABETICAL_ASCENDING = 0,

  /**
   * Z-A
   *
   * @generated from enum value: ALPHABETICAL_DESCENDING = 1;
   */
  ALPHABETICAL_DESCENDING = 1,

  /**
   * Oldest first
   *
   * @generated from enum value: DATE_ASCENDING = 2;
   */
  DATE_ASCENDING = 2,

  /**
   * Newest first
   *
   * @generated from enum value: DATE_DESCENDING = 3;
   */
  DATE_DESCENDING = 3,
}

/**
 * Describes the enum SortOrder.
 */
export const SortOrderSchema: GenEnum<SortOrder> = /*@__PURE__*/
  enumDesc(file_util, 0);

